<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Site" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="unqualified" attributeFormDefault="qualified">

  <!-- ELEMENTS -->

  <xs:element name="Site">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        The Site element is the root element of the Site.xml document.  It contains all the child elements
        necessary to configure and customize a Geocortex Essentials Site.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="IdentifiableResourceType">
          <xs:all>
            
            <xs:element name="ExternalConfigs" minOccurs="0">
              <xs:complexType>
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="ExternalConfig" type="ExternalConfigType" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>

            <!-- The following Site sub-elements must be defined in sequential order to enforce referential integrity -->
            <xs:element name="Security" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  Obsolete - Defines legacy security criteria for this site.
                </xs:documentation>
              </xs:annotation>
            </xs:element>

            <xs:element name="Permissions" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  Defines what entities may access this site.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:complexContent>
                  <xs:extension base="Permissions" />
                </xs:complexContent>
              </xs:complexType>
            </xs:element>

            <xs:element name="SecurityContexts" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  Defines security credentials for the site.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:complexContent>
                  <xs:extension base="SecurityContexts" />
                </xs:complexContent>
              </xs:complexType>
            </xs:element>

            <xs:element name="Properties" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  A site can have user defined properties for application specific purposes.  Administrators may wish to
                  define properties to control settings of the application that need to be known by the client API applications
                  which consume a site.  For example, a property might contain a "feedback" email address, or the location of
                  a directory containing a set of images used by the application.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:complexContent>
                  <xs:extension base="Properties" />
                </xs:complexContent>
              </xs:complexType>

              <!-- Ensure that the Name attribute is unique -->
              <xs:unique name="UniqueSitePropertyNameConstraint">
                <xs:selector xpath="./Property" />
                <xs:field xpath="@Name" />
              </xs:unique>
            </xs:element>
            <!-- End of Properties -->

            <!-- Virtual Directory -->
            <xs:element name="VirtualDirectory" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  A virtual directory can be used to serve site specific content from
                  within the REST api.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Note" minOccurs="0" maxOccurs="1">
                    <xs:simpleType>
                      <xs:restriction base="xs:string"/>
                    </xs:simpleType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="Path" type="xs:string" use="required">
                  <xs:annotation>
                    <xs:documentation>
                      The physical path of the virtual directory on disk.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <!-- End of Virtual Directory -->

            <xs:element name="DataConnections" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  A collection of DataConnection items.  Each DataConnection within this collection may be used to
                  define a connection to an external data source which might be consumed by Geocortex Essentials when
                  linking layer spatial data.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="DataConnection" minOccurs="1" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">
                        A DataConnection provides the necessary information for connecting to an
                        external data source such as a SQL Server or Oracle database, a Microsoft Excel spreadsheet,
                        an XML file, etc.  Data Connections can be referenced by Data Links within a layer to connect
                        spatial layer data to external data.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent>
                        <xs:extension base="IdentifiableResourceType">
                          <xs:all>

                            <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                  This allows administrators and developers to define custom XML extensions which can become
                                  deserialized into business objects when the site is loaded.  These objects can then be
                                  referenced by a developer in order to obtain, for example, configuration information for
                                  a custom component.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Extensions" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>
                            <!-- End of Extensions -->

                            <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  A data connection can have user defined properties for application specific purposes.  Administrators may wish to
                                  define properties to control settings of the application that need to be known by the client API applications
                                  which consume a site.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Properties" />
                                </xs:complexContent>
                              </xs:complexType>

                              <!-- Ensure that the Name attribute is unique -->
                              <xs:unique name="UniqueDataConnectionPropertyNameConstraint">
                                <xs:selector xpath="./Property" />
                                <xs:field xpath="@Name" />
                              </xs:unique>
                            </xs:element>
                            <!-- End of Properties -->

                            <xs:element name="Note" minOccurs="0" maxOccurs="1">
                              <xs:simpleType>
                                <xs:restriction base="xs:string"/>
                              </xs:simpleType>
                            </xs:element>
                            <!-- End of Note -->

                          </xs:all>
                          <xs:attribute name="ConnectionString" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The connection string is the key attribute used when defining a data connection - it contains
                                all of the parameters needed to create a connection to the underlying data source.  The actual syntax
                                of the connection string is dependent on the syntax of the particular ADO.NET provider and data source
                                used. Geocortex Essentials imposes no restriction on the syntax and will use the connection string as is.
                                It is therefore important to consult the data source provider's documentation to find out how to create
                                the connection string.

                                You may also consult http://www.connectionstrings.com for helpful examples of the connection strings for
                                numerous different providers.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ConnectionStringName" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The name of the connection string configured in the web.config of the Rest application. The ConnectionStringName
                                is used as an alternative to the ConnectionString. If specified, it will be used instead of the ConnectionString.
                                This is useful to protect user and password information since connection strings can be encrypted.

                                See http://msdn.microsoft.com/en-us/library/89211k9b(v=VS.100).aspx
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ErrorAction" type="ErrorActionType">
                            <xs:annotation>
                              <xs:documentation>
                                The action to execute if the connection to the data source fails.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ProviderName" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                The name of the .NET Framework data provider that the DataLinkConnectionItem uses to connect to an underlying data source.

                                The standard providers that ship with the Microsoft .NET Framework are:

                                System.Data.SqlClient
                                System.Data.OleDb
                                System.Data.Odbc
                                System.Data.OracleClient
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="SqlDialect" type="SqlDialectType" default="NotSpecified">
                            <xs:annotation>
                              <xs:documentation>
                                The SQL dialect to assist with raw SQL statement generation.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="VerifyConnectionOnStartup" type="BoolType">
                            <xs:annotation>
                              <xs:documentation>
                                Indicates whether the connection to the Data Source should be tested when a site is initially loaded.  Failed connections
                                will result in the site becoming unavailable if this attribute is set to true; otherwise if this attribute is false, failed
                                connections will allow the site to load and a log will be written to the application log file.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ImpersonateWithActor" type="BoolType">
                            <xs:annotation>
                              <xs:documentation>
                                Indicates that the connection to be initiated with impersonation of the actor supplied on some identity.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>

              <!-- Ensure that the ID attribute is unique -->
              <xs:unique name="UniqueDataConnectionIDConstraint">
                <xs:selector xpath="./DataConnection" />
                <xs:field xpath="@ID" />
              </xs:unique>
            </xs:element>
            <!-- End of DataConnections -->

            <xs:element name="Map" id="Map" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  A Map is composed of Layers that exist in MapServices.  Configuring the available Layers allows
                  an administrator to control the appearance and data available in the site's Map.  Within a site, think
                  of a map not as a visual component, but as an organizational construct allowing you to define which
                  map services and layers will be available within your application.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:all>
                  <xs:element name="BaseMaps" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                      <xs:documentation>
                        A collection of Base Maps.  These are definitions of collections of map services which can be
                        switched between by the end user to change the base map.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="BaseMap" minOccurs="0" maxOccurs="unbounded">
                          <xs:annotation>
                            <xs:documentation>
                              A base map is a collection of map services that equates to an option in the base map picker.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="IdentifiableResourceType">
                                <xs:all>
                                  <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation xml:lang="en">
                                        The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                        This allows administrators and developers to define custom XML extensions which can become
                                        deserialized into business objects when the site is loaded.  These objects can then be
                                        referenced by a developer in order to obtain, for example, configuration information for
                                        a custom component.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="Extensions" />
                                      </xs:complexContent>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of Extensions -->
                                  <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation xml:lang="en">
                                        A base map can have user defined properties for application specific purposes.  Administrators may wish to
                                        define properties to control settings of the application that need to be known by the client API applications
                                        which consume a site.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="Properties" />
                                      </xs:complexContent>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of Properties -->
                                </xs:all>
                                <xs:attribute name="IconUri" type="xs:string" use="optional" />
                              </xs:extension>
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <!-- End of BaseMaps -->
                  <xs:element name="MapServices" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                      <xs:documentation>
                        A collection of MapServices that provide Layers for the Map.  Each MapService defines a connection
                        to a running service which will be consumed by your site.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="GeoRssLayer" minOccurs="0" maxOccurs="unbounded">
                          <xs:annotation>
                            <xs:documentation>
                              A GeoRssLayer is an external resource that provides GeoRSS feeds. At
                              the time of this writing, only Simple rendering of GeoRSS and W3C feed format are supported.
                            </xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <!-- End of GeoRssLayer -->

                        <xs:element name="KmlService" minOccurs="0" maxOccurs="unbounded">
                          <xs:annotation>
                            <xs:documentation>
                              A KML layer is an external resource that specifies features in Keyhole Markup Language. The
                              connection URL can refer to either a KML or KMZ (KML archive) resource.
                            </xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        
                        <xs:element name="MapService" minOccurs="0" maxOccurs="unbounded">
                          <xs:annotation>
                            <xs:documentation>
                              A MapService is an external, running service that provides spatial data in the form of Layers. At
                              the time of this writing, two types of map services can be connected to from Geocortex Essentials:
                              an ArcGIS Server REST service, and a Bing Maps map service.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="IdentifiableResourceType">
                                <xs:all>

                                  <xs:element name="Layers" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        The collection of layers you wish to include from the parent MapService.  Here, each layer you provide will
                                        be included in your application... this does not necessarily mean that the layers included will be visible.
                                        The visibility settings of each layer included are honored as per the configuration in the
                                        underlying map service.

                                        Layers which you do not include in this collection will not be available to client applications, and will
                                        therefor not be drawn in print requests.

                                        For ArcGIS Server-based map services you should include at least 1 child Layer element.  For Bing Maps-based
                                        map services, do not provide any child layers since a Bing Maps service does not contain layers.

                                        The order of the layers defined in this collection will not affect drawing order.  Layers will be drawn in the
                                        order they are defined within the underlying map service.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                        <xs:element ref="Layer" minOccurs="0" maxOccurs="unbounded" />
                                        <xs:element ref="GroupLayer" minOccurs="0" maxOccurs="unbounded" />
                                      </xs:sequence>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of Layers -->

                                  <xs:element name="Permissions" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        Defines what entities may access this resource.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="Permissions" />
                                      </xs:complexContent>
                                    </xs:complexType>
                                  </xs:element>

                                  <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation xml:lang="en">
                                        The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                        This allows administrators and developers to define custom XML extensions which can become
                                        deserialized into business objects when the site is loaded.  These objects can then be
                                        referenced by a developer in order to obtain, for example, configuration information for
                                        a custom component.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="Extensions" />
                                      </xs:complexContent>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of Extensions -->

                                  <xs:element ref="LayerHyperlinks" minOccurs="0" maxOccurs="1"/>

                                  <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation xml:lang="en">
                                        A map service can have user defined properties for application specific purposes.  Administrators may wish to
                                        define properties to control settings of the application that need to be known by the client API applications
                                        which consume a site.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="Properties" />
                                      </xs:complexContent>
                                    </xs:complexType>

                                    <!-- Ensure that the Name attribute is unique -->
                                    <xs:unique name="UniqueMapServicePropertyNameConstraint">
                                      <xs:selector xpath="./Property" />
                                      <xs:field xpath="@Name" />
                                    </xs:unique>
                                  </xs:element>
                                  <!-- End of Properties -->

                                  <xs:element ref="BaseMapSettings" minOccurs="0" maxOccurs="1" />
                                  
                                  <xs:element name="RasterOptions" minOccurs="0" maxOccurs="1">
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="RasterOptionsType" />
                                      </xs:complexContent>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of Raster Options -->

                                  <xs:element ref="ThemeSettings" minOccurs="0" maxOccurs="1" />
                                  
                                  <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                    <xs:simpleType>
                                      <xs:restriction base="xs:string"/>
                                    </xs:simpleType>
                                  </xs:element>
                                  <!-- End of Note -->

                                  <xs:element ref="LocalProxy" minOccurs="0" maxOccurs="1" />

                                </xs:all>
                                <xs:attributeGroup ref="MapServiceBaseAttributes" />
                                <xs:attributeGroup ref="MapServiceAttributes" />
                              </xs:extension>
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>
                        <!-- End of MapService -->

                        <xs:element name="FeatureLayer" minOccurs="0" maxOccurs="unbounded">
                          <xs:annotation>
                            <xs:documentation>
                              The feature layer can be used to display features in one layer of a Feature Service or a Map Service.
                              If the underlaying layer is from a Feature Service, it can be used to edit features and apply those
                              edits back to the server.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="IdentifiableResourceType">
                                <xs:all>
                                  <xs:element ref="FeatureClustering" minOccurs="0" maxOccurs="1"/>
                                  <xs:element ref="FeatureHeatMaps" minOccurs="0" maxOccurs="1"/>
                                  <xs:element name="Layers" minOccurs="0" maxOccurs="1">
                                    <xs:complexType>
                                      <xs:sequence minOccurs="0" maxOccurs="1">
                                        <xs:element ref="Layer" minOccurs="0" maxOccurs="1" />
                                      </xs:sequence>
                                    </xs:complexType>
                                  </xs:element>
                                  <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation xml:lang="en">
                                        The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                        This allows administrators and developers to define custom XML extensions which can become
                                        deserialized into business objects when the site is loaded.  These objects can then be
                                        referenced by a developer in order to obtain, for example, configuration information for
                                        a custom component.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="Extensions" />
                                      </xs:complexContent>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of Extensions -->

                                  <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation xml:lang="en">
                                        A feature layer can have user defined properties for application specific purposes.  Administrators may wish to
                                        define properties to control settings of the application that need to be known by the client API applications
                                        which consume a site.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="Properties" />
                                      </xs:complexContent>
                                    </xs:complexType>

                                    <!-- Ensure that the Name attribute is unique -->
                                    <xs:unique name="UniqueFeatureLayerPropertyNameConstraint">
                                      <xs:selector xpath="./Property" />
                                      <xs:field xpath="@Name" />
                                    </xs:unique>
                                  </xs:element>
                                  <!-- End of Properties -->

                                  <xs:element ref="ThemeSettings" minOccurs="0" maxOccurs="1" />

                                  <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                    <xs:simpleType>
                                      <xs:restriction base="xs:string"/>
                                    </xs:simpleType>
                                  </xs:element>
                                  <!-- End of Note -->

                                  <xs:element ref="LocalProxy" minOccurs="0" maxOccurs="1" />

                                </xs:all>
                                <xs:attributeGroup ref="MapServiceBaseAttributes" />
                                <xs:attributeGroup ref="FeatureLayerAttributes" />
                              </xs:extension>
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>
                        <!-- End of FeatureLayer -->
                      </xs:sequence>
                    </xs:complexType>

                    <!-- Ensure that the ID attribute is unique -->
                    <xs:unique name="UniqueMapServiceIDConstraint">
                      <xs:selector xpath="./MapService" />
                      <xs:field xpath="@ID" />
                    </xs:unique>
                  </xs:element>
                  <!-- End of MapServices -->

                  <xs:element name="LayerList" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                      <xs:documentation>
                        A hierarchical collection of items that form the layer list. Items can be associated
                        with map services and layers (via the "LayerListID" attribute on those elements). Any
                        layer list item that isn't associated with a map service or layer is considered to be
                        a folder.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Items" type="LayerListItems" minOccurs="0" maxOccurs="1" />
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="LayerThemes" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                      <xs:documentation>
                        A collection of Layer Themes.  These are definitions of collections of layers which can be
                        switched between by the end user for a different view of the data in the same site.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Items" minOccurs="0" maxOccurs="1">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="LayerTheme" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                  <xs:documentation>
                                    A Layer Theme is a collection of layers which the application should allow users to switch between.
                                  </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:complexContent>
                                    <xs:extension base="IdentifiableResourceType">
                                      <xs:all>
                                        <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                                          <xs:annotation>
                                            <xs:documentation xml:lang="en">
                                              The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                              This allows administrators and developers to define custom XML extensions which can become
                                              deserialized into business objects when the site is loaded.  These objects can then be
                                              referenced by a developer in order to obtain, for example, configuration information for
                                              a custom component.
                                            </xs:documentation>
                                          </xs:annotation>
                                          <xs:complexType>
                                            <xs:complexContent>
                                              <xs:extension base="Extensions" />
                                            </xs:complexContent>
                                          </xs:complexType>
                                        </xs:element>
                                        <!-- End of Extensions -->
                                        <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                                          <xs:annotation>
                                            <xs:documentation xml:lang="en">
                                              A layer theme can have user defined properties for application specific purposes.  Administrators may wish to
                                              define properties to control settings of the application that need to be known by the client API applications
                                              which consume a site.
                                            </xs:documentation>
                                          </xs:annotation>
                                          <xs:complexType>
                                            <xs:complexContent>
                                              <xs:extension base="Properties" />
                                            </xs:complexContent>
                                          </xs:complexType>
                                        </xs:element>
                                        <!-- End of Properties -->
                                      </xs:all>
                                    </xs:extension>
                                  </xs:complexContent>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute name="AllowDefault" type="BoolType" >
                        <xs:annotation>
                          <xs:documentation>
                            Whether the end user will be able to switch to all layers as a pseudo theme.  If false, the user will
                            only be able to switch between defined themes and will not be able to switch to showing all layers.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="DefaultThemeDisplayName" type="xs:string" >
                        <xs:annotation>
                          <xs:documentation>
                            If AllowDefault is set to true, this attribute sets the name which will appear to the user in the
                            interface alongside the defined layer themes.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="StartupThemeID" type="xs:string" >
                        <xs:annotation>
                          <xs:documentation>
                            ID of the theme which will be active at application startup.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>

                  <xs:element name="Note" minOccurs="0" maxOccurs="1">
                    <xs:simpleType>
                      <xs:restriction base="xs:string"/>
                    </xs:simpleType>
                  </xs:element>
                  <!-- End of Note -->

                </xs:all>
                <xs:attribute name="PrimaryMapServiceID" type="xs:string" >
                  <xs:annotation>
                    <xs:documentation>
                      The ID of the Map Service that should be used as the base settings for the Map. Map properties such as
                      extent and spatial reference will be set from the Primary Map Service.

                      If not specified, the last Map Service defined in the XML will be used as the Primary Map Service.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="FullExtent" type="RectangleType">
                  <xs:annotation>
                    <xs:documentation>
                      An optional rectangle/envelope specifying the full extent of the Map.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="InitialExtent" type="RectangleType">
                  <xs:annotation>
                    <xs:documentation>
                      Sets the starting extent of the map.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <!-- End of Map -->

            <xs:element name="OverviewMap" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  A secondary map that you can configure to act as an overview map for the main map.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:all>
                  <xs:element name="MapServices" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                      <xs:documentation>
                        A collection of MapServices that provide Layers for the OverviewMap.  Each MapService
                        defines a connection to a running service which will be consumed by your site.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="MapService" minOccurs="1" maxOccurs="unbounded">
                          <xs:annotation>
                            <xs:documentation>
                              A MapService is an external, running service that provides spatial data in the form of Layers. At
                              the time of this writing, two types of map services can be connected to from Geocortex Essentials:
                              an ArcGIS Server REST service, and a Bing Maps map service.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="IdentifiableResourceType">
                                <xs:all>

                                  <xs:element name="Layers" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        The collection of layers you wish to include from the parent MapService.  Here, each layer you provide will
                                        be included in your application... this does not necessarily mean that the layers included will be visible.
                                        The visibility settings of each layer included are honored as per the configuration in the
                                        underlying map service.

                                        Layers which you do not include in this collection will not be available to client applications, and will
                                        therefor not be drawn in print requests.

                                        For ArcGIS Server-based map services you should include at least 1 child Layer element.  For Bing Maps-based
                                        map services, do not provide any child layers since a Bing Maps service does not contain layers.

                                        The order of the layers defined in this collection will not affect drawing order.  Layers will be drawn in the
                                        order they are defined within the underlying map service.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                        <xs:element ref="Layer" minOccurs="0" maxOccurs="unbounded" />
                                        <xs:element ref="GroupLayer" minOccurs="0" maxOccurs="unbounded" />
                                      </xs:sequence>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of Layers -->

                                  <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation xml:lang="en">
                                        The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                        This allows administrators and developers to define custom XML extensions which can become
                                        deserialized into business objects when the site is loaded.  These objects can then be
                                        referenced by a developer in order to obtain, for example, configuration information for
                                        a custom component.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="Extensions" />
                                      </xs:complexContent>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of Extensions -->

                                  <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation xml:lang="en">
                                        An overview map service can have user defined properties for application specific purposes.  Administrators may wish to
                                        define properties to control settings of the application that need to be known by the client API applications
                                        which consume a site.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="Properties" />
                                      </xs:complexContent>
                                    </xs:complexType>

                                    <!-- Ensure that the Name attribute is unique -->
                                    <xs:unique name="UniqueOverviewMapServicePropertyNameConstraint">
                                      <xs:selector xpath="./Property" />
                                      <xs:field xpath="@Name" />
                                    </xs:unique>
                                  </xs:element>
                                  <!-- End of Properties -->

                                  <xs:element name="RasterOptions" minOccurs="0" maxOccurs="1">
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="RasterOptionsType" />
                                      </xs:complexContent>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of Raster Options -->

                                  <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                    <xs:simpleType>
                                      <xs:restriction base="xs:string"/>
                                    </xs:simpleType>
                                  </xs:element>
                                  <!-- End of Note -->
                                  
                                </xs:all>
                                <xs:attributeGroup ref="MapServiceBaseAttributes" />
                                <xs:attributeGroup ref="MapServiceAttributes" />
                              </xs:extension>
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>
                        <!-- End of MapService -->

                      </xs:sequence>
                    </xs:complexType>

                    <!-- Ensure that the ID attribute is unique -->
                    <xs:unique name="UniqueOverviewMapMapServiceIDConstraint">
                      <xs:selector xpath="./MapService" />
                      <xs:field xpath="@ID" />
                    </xs:unique>
                  </xs:element>
                  <!-- End of MapServices -->

                  <xs:element name="Note" minOccurs="0" maxOccurs="1">
                    <xs:simpleType>
                      <xs:restriction base="xs:string"/>
                    </xs:simpleType>
                  </xs:element>
                  <!-- End of Note -->

                </xs:all>
                <xs:attribute name="PrimaryMapServiceID" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      The ID of the Map Service that should be used as the base settings for the Overview Map.
                      Map properties such as extent and spatial reference will be set from the Primary Map Service.

                      If not specified, the last Map Service defined in the XML will be used as the Primary Map Service.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="FullExtent" type="RectangleType">
                  <xs:annotation>
                    <xs:documentation>
                      An optional rectangle/envelope specifying the full extent of the Map.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="InitialExtent" type="RectangleType">
                  <xs:annotation>
                    <xs:documentation>
                      Sets the starting extent of the map.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <!-- End of OverviewMap -->

            <xs:element name="NamedExtents" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  A collection of Named Extents.  These are often synonymous with "bookmarks", or locations on the map
                  of some importance.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="NamedExtent" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation>
                        A Named Extent is simply a way of associating a label with a given extent (rectangle) on your map.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent>
                        <xs:extension base="IdentifiableResourceType">
                          <xs:all>

                            <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                  This allows administrators and developers to define custom XML extensions which can become
                                  deserialized into business objects when the site is loaded.  These objects can then be
                                  referenced by a developer in order to obtain, for example, configuration information for
                                  a custom component.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Extensions" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>
                            <!-- End of Extensions -->

                            <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  A named extent can have user defined properties for application specific purposes.  Administrators may wish to
                                  define properties to control settings of the application that need to be known by the client API applications
                                  which consume a site.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Properties" />
                                </xs:complexContent>
                              </xs:complexType>

                              <!-- Ensure that the Name attribute is unique -->
                              <xs:unique name="UniqueNamedExtentPropertyNameConstraint">
                                <xs:selector xpath="./Property" />
                                <xs:field xpath="@Name" />
                              </xs:unique>
                            </xs:element>
                            <!-- End of Properties -->

                            <xs:element name="Note" minOccurs="0" maxOccurs="1">
                              <xs:simpleType>
                                <xs:restriction base="xs:string"/>
                              </xs:simpleType>
                            </xs:element>
                            <!-- End of Note -->

                          </xs:all>
                          <xs:attribute name="Extent" type="RectangleType" use="required">
                            <xs:annotation>
                              <xs:documentation>
                                The extent (a comma separated list of x,y coordinates representing the top-left and bottom-right
                                corners of a rectangle in the coordinate system of the map) which is to be labelled, or given a
                                name.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>

              <!-- Ensure that the ID attribute is unique -->
              <xs:unique name="UniqueNamedExtentIDConstraint">
                <xs:selector xpath="./NamedExtent" />
                <xs:field xpath="@ID" />
              </xs:unique>
            </xs:element>
            <!-- End of NamedExtents -->

            <xs:element name="Viewers" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  A collection of Viewers. Applications which expose the functionality of the Site and allow user interaction.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Viewer" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation>
                        A Viewer is a related application which is tailored for consuming this particular site object and displaying it in a useful manner to an end-user.
                        It likely contains a number of tools to expose the Site functionality and allow the user to interact with the Site elements.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent>
                        <xs:extension base="IdentifiableResourceType">
                          <xs:all>

                            <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                  This allows administrators and developers to define custom XML extensions which can become
                                  deserialized into business objects when the site is loaded.  These objects can then be
                                  referenced by a developer in order to obtain, for example, configuration information for
                                  a custom component.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Extensions" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>
                            <!-- End of Extensions -->

                            <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  A viewer can have user defined properties for application specific purposes.  Administrators may wish to
                                  define properties to control settings of the application that need to be known by the client API applications
                                  which consume a site.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Properties" />
                                </xs:complexContent>
                              </xs:complexType>

                              <!-- Ensure that the Name attribute is unique -->
                              <xs:unique name="UniqueViewerPropertyNameConstraint">
                                <xs:selector xpath="./Property" />
                                <xs:field xpath="@Name" />
                              </xs:unique>
                            </xs:element>
                            <!-- End of Properties -->

                          </xs:all>

                          <xs:attribute name="Path" type="xs:string" use="required">
                            <xs:annotation>
                              <xs:documentation>
                                The physical path of the virtual directory on disk.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>

                          <xs:attribute name="TemplateID" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                The id of the template that this viewer was created from.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>

                          <xs:attribute name="Hidden" type="BoolType" default="false">
                            <xs:annotation>
                              <xs:documentation>
                                Indicates whether the viewer should be included in list of available viewer configurations.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>

              <!-- Ensure that the ID attribute is unique -->
              <xs:unique name="UniqueViewerIDConstraint">
                <xs:selector xpath="./Viewer" />
                <xs:field xpath="@ID" />
              </xs:unique>
            </xs:element>
            <!-- End of Viewers -->

            <xs:element name="NorthArrow" minOccurs="0" maxOccurs="1" >
              <xs:annotation>
                <xs:documentation>
                  Represents the definition of a north arrow, which can be consumed and viewed by a calling
                  application, or printed as part of a Print Template.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Note" minOccurs="0" maxOccurs="1">
                    <xs:simpleType>
                      <xs:restriction base="xs:string"/>
                    </xs:simpleType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="CharacterIndex" type="NorthArrowCharacterType" default="176">
                  <xs:annotation>
                    <xs:documentation>
                      The index of the character to use in the ESRI_North font family which will represent the North Arrow.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ForeColor" type="ColorType" default="Black">
                  <xs:annotation>
                    <xs:documentation>
                      The color to use for the foreground of the North Arrow symbol.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <!-- End of NorthArrow -->

            <xs:element name="PrintTemplates" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  A collection of Print Templates.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="PrintTemplate" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation>
                        A Print Template is similar to a Map Template Report, however it is meant for the purpose of
                        generating a paper map layout and has expanded options compared to a Map Template Report.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent>
                        <xs:extension base="IdentifiableResourceType">
                          <xs:all>

                            <xs:element name="Permissions" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation>
                                  Defines what entities may access this resource.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Permissions" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>

                            <xs:element name="PrintJobSettings" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation>
                                  PrintJobSettings defines the properties needed to process reports in an external process.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="PrintJobSettingsType" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>
                            <xs:element name="SupportedMapScales" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation>
                                  A collection of Scale Item choices to print the map at.  Omitting the supported map scales will
                                  indicate that all map scales are supported.  If; however, one or more scale items are listed in the
                                  supported map scales collection then print templates are confined to use these scales and requests for
                                  maps at other scales will fail.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:sequence>
                                  <xs:element name="ScaleItem" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                      <xs:documentation>
                                        A Scale Item represents a choice of map scale that the user can make to display their
                                        map image at when they execute the Print Template.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence>
                                        <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                          <xs:simpleType>
                                            <xs:restriction base="xs:string"/>
                                          </xs:simpleType>
                                        </xs:element>
                                      </xs:sequence>
                                      <xs:attribute name="DisplayName" type="xs:string" >
                                        <xs:annotation>
                                          <xs:documentation>
                                            The text that will display for this scale item choice.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="Scale" type="xs:double" use="required">
                                        <xs:annotation>
                                          <xs:documentation>
                                            The scale that the map image will be generated at.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                    </xs:complexType>
                                  </xs:element>
                                </xs:sequence>
                              </xs:complexType>
                            </xs:element>
                            <!-- End of SupportedMapScales -->

                            <xs:element name="SupportedOutputFormats" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation>
                                  The output formats that will be supported (allowed) for this Print Template.  Omitting the supported output formats will
                                  indicate that all output formats are supported.  If; however, one or more output formats are listed in the
                                  supported output formats collection then reports are confined to use these output formats and requests for
                                  other formats will fail.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:all>
                                  <xs:element name="Pdf" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        PDF (portable document format) output type.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence />
                                    </xs:complexType>
                                  </xs:element>
                                  <xs:element name="Rtf" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        RTF (rich text format) output type.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence />
                                    </xs:complexType>
                                  </xs:element>
                                  <xs:element name="Tiff" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        TIFF output type.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence />
                                    </xs:complexType>
                                  </xs:element>
                                  <xs:element name="Bmp" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        BMP (bitmap) output type.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence />
                                    </xs:complexType>
                                  </xs:element>
                                  <xs:element name="Gif" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        GIF output type.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence />
                                    </xs:complexType>
                                  </xs:element>
                                  <xs:element name="Jpeg" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        JPEG output type.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence />
                                    </xs:complexType>
                                  </xs:element>
                                  <xs:element name="Png" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        PNG output type.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence />
                                    </xs:complexType>
                                  </xs:element>
                                </xs:all>
                              </xs:complexType>
                            </xs:element>
                            <!-- End of SupportedOutputFormats -->

                            <xs:element name="SupportedResolutions" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation>
                                  A collection of Resolution choices for use with the PrintTemplate.  Leaving this
                                  element empty implies that all resolutions are supported.  If you define one or more resolutions
                                  then those resolutions are used to validate the requests and requests for Print Templates or maps with resolutions
                                  outside of the list of supported resolutions will fail.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:sequence>
                                  <xs:element name="Resolution" minOccurs="1" maxOccurs="unbounded">
                                    <xs:annotation>
                                      <xs:documentation>
                                        A Resolution item represents a choice of image resolution that the user
                                        can make to display their map image at when they execute a MapDataTemplateReport.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence>
                                        <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                          <xs:simpleType>
                                            <xs:restriction base="xs:string"/>
                                          </xs:simpleType>
                                        </xs:element>
                                      </xs:sequence>
                                      <xs:attribute name="Dpi" type="DpiType" use="required">
                                        <xs:annotation>
                                          <xs:documentation>
                                            The dpi of the map image.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="DisplayName" type="xs:string">
                                        <xs:annotation>
                                          <xs:documentation>
                                            The text that will display for this resolution choice.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                    </xs:complexType>
                                  </xs:element>
                                </xs:sequence>
                              </xs:complexType>
                            </xs:element>
                            <!-- End of SupportedResolutions -->

                            <xs:element name="TextFields" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation>
                                  A collection of Text Fields which represent the text fields in a Print Template that can be populated at runtime
                                  with values.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:sequence>
                                  <xs:element name="TextField" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                      <xs:documentation>
                                        A configurable text field in a template report.  A Text Field
                                        will map to a text or label control in a report template (.rpx file, created with the Geocortex Report Designer)
                                        Administrators can configure text fields values using this element, and it can also be displayed to the
                                        user to override values set by an administrator or report designer.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence>
                                        <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                          <xs:simpleType>
                                            <xs:restriction base="xs:string"/>
                                          </xs:simpleType>
                                        </xs:element>
                                      </xs:sequence>
                                      <xs:attribute name="Value" type="xs:string">
                                        <xs:annotation>
                                          <xs:documentation>
                                            A default value for the text field.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="DataFieldName" type="xs:string" use="required">
                                        <xs:annotation>
                                          <xs:documentation>
                                            The name of the DataField of the text or label control within the .RPX file being modified.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="Editable" type="BoolType" default="true">
                                        <xs:annotation>
                                          <xs:documentation>
                                            Whether or not this text field should be shown to the user for them to edit.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="MultiLine" type="BoolType">
                                        <xs:annotation>
                                          <xs:documentation>
                                            Whether or not the text field entry box should allow multiple lines of input.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="DisplayName" type="xs:string">
                                        <xs:annotation>
                                          <xs:documentation>
                                            A custom name for this control or component. The name, or label, for the text field when shown to the user.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                    </xs:complexType>
                                  </xs:element>
                                </xs:sequence>
                              </xs:complexType>
                            </xs:element>
                            <!-- End of TextFields -->

                            <xs:element name="Grids" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation>
                                  A collection of Grids, that you can include zero or one of in a print operation to add a grid
                                  or graticules to the printed map.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:sequence>
                                  <xs:element name="Grid" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                      <xs:documentation>
                                        A grid allows you to add lines on the map with labelled coordinates so that you can cross
                                        reference the lines to derive coordinate values of locations on the map. Grids can be
                                        displayed in different projections other than the map projection. If the grid is using
                                        a geographic coordinate system then the grid is describing a set of graticules, with
                                        parallels (roughly horizontal lines, or lines of latitude) and meridians (roughly vertical
                                        lines, or lines of longitude).
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:complexContent>
                                        <xs:extension base="IdentifiableResourceType">
                                          <xs:all>
                                            <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                                              <xs:annotation>
                                                <xs:documentation xml:lang="en">
                                                  The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                                  This allows administrators and developers to define custom XML extensions which can become
                                                  deserialized into business objects when the site is loaded.  These objects can then be
                                                  referenced by a developer in order to obtain, for example, configuration information for
                                                  a custom component.
                                                </xs:documentation>
                                              </xs:annotation>
                                              <xs:complexType>
                                                <xs:complexContent>
                                                  <xs:extension base="Extensions" />
                                                </xs:complexContent>
                                              </xs:complexType>
                                            </xs:element>
                                            <!-- End of Extensions -->
                                            <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                                              <xs:annotation>
                                                <xs:documentation xml:lang="en">
                                                  A grid can have user defined properties for application specific purposes.  Administrators may wish to
                                                  define properties to control settings of the application that need to be known by the client API applications
                                                  which consume a site.
                                                </xs:documentation>
                                              </xs:annotation>
                                              <xs:complexType>
                                                <xs:complexContent>
                                                  <xs:extension base="Properties" />
                                                </xs:complexContent>
                                              </xs:complexType>
                                            </xs:element>
                                            <!-- End of Properties -->
                                            <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                              <xs:simpleType>
                                                <xs:restriction base="xs:string"/>
                                              </xs:simpleType>
                                            </xs:element>
                                            <!-- End of Note -->
                                          </xs:all>
                                          <xs:attribute name="Intervals" type="xs:int" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>
                                                The approximate number of intervals to include in the grid.
                                              </xs:documentation>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="SpatialReferenceWkid" type="xs:int" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>
                                                The well known id of the spatial reference to use for the grid lines. Use a value
                                                of 4326 to get graticules in WGS 84.
                                              </xs:documentation>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="SpatialReferenceWkt" type="xs:string" use="optional">
                                            <xs:annotation>
                                              <xs:documentation>
                                                The well known text of the spatial reference to use for the grid lines.
                                              </xs:documentation>
                                            </xs:annotation>
                                          </xs:attribute>
                                        </xs:extension>
                                      </xs:complexContent>
                                    </xs:complexType>
                                  </xs:element>
                                </xs:sequence>
                              </xs:complexType>
                            </xs:element>
                            <!-- End of Grids -->

                            <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                  This allows administrators and developers to define custom XML extensions which can become
                                  deserialized into business objects when the site is loaded.  These objects can then be
                                  referenced by a developer in order to obtain, for example, configuration information for
                                  a custom component.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Extensions" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>
                            <!-- End of Extensions-->

                            <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  A print template can have user defined properties for application specific purposes.  Administrators may wish to
                                  define properties to control settings of the application that need to be known by the client API applications
                                  which consume a site.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Properties" />
                                </xs:complexContent>
                              </xs:complexType>

                              <!-- Ensure that the Name attribute is unique -->
                              <xs:unique name="UniquePrintTemplatePropertyNameConstraint">
                                <xs:selector xpath="./Property" />
                                <xs:field xpath="@Name" />
                              </xs:unique>
                            </xs:element>
                            <!-- End of Properties -->

                            <xs:element name="Note" minOccurs="0" maxOccurs="1">
                              <xs:simpleType>
                                <xs:restriction base="xs:string"/>
                              </xs:simpleType>
                            </xs:element>
                            <!-- End of Note -->

                          </xs:all>
                          <xs:attributeGroup ref="TemplateReportAttributes" />
                          <xs:attribute name="CustomWorkflowAssembly" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                Name of the assembly which contains the custom reporting workflow to use.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="CustomWorkflowClassName" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                Name of the class in the CustomWorkflowAssembly which represents the workflow to use.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="Description" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                The textual description of this report.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ScaleBarUnit" type="UnitType" default="Miles">
                            <xs:annotation>
                              <xs:documentation>
                                The unit used to generate the scale bar distance when a scale bar is included in the Print Template.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="DefaultMapScale" type="xs:string" default="Current Extent">
                            <xs:annotation>
                              <xs:documentation>
                                The default map scale that is used when printing the map.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="DefaultOutputFormat" type="xs:string" default="Pdf">
                            <xs:annotation>
                              <xs:documentation>
                                The default output format that is used when printing the map.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="DefaultResolution" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                The default resolution that is used when printing the map.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="DefaultGrid" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                The default Grid that is used when printing the map.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="IsDefault" type="BoolType" default="false">
                            <xs:annotation>
                              <xs:documentation>
                                If true, the Print Template will be used as default when exporting the map. If false, the first available will be used.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="MaximumResolution" type="xs:nonNegativeInteger" default="300">
                            <xs:annotation>
                              <xs:documentation>
                                The maximum resolution to allow when map images are requested using this template.  Set this if you wish to override the default of 300.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="TransformWorkflowUri" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                The URI of a workflow that will execute after the report data is generated but before it is formatted.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="Visible" type="BoolType" default="True">
                            <xs:annotation>
                              <xs:documentation>
                                If true, the Print Template should be presented in the user interface, if false, it should be hidden.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                  <!-- End of PrintTemplate -->

                </xs:sequence>
              </xs:complexType>

              <!-- Ensure that the ID attribute is unique -->
              <xs:unique name="UniquePrintTemplateIDConstraint">
                <xs:selector xpath="./PrintTemplate" />
                <xs:field xpath="@ID" />
              </xs:unique>

            </xs:element>
            <!-- End of PrintTemplates -->

            <xs:element name="PrintTemplatesPermissions" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  The permissions that apply to the collection of print templates.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:all>
                  <xs:element name="Permissions" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                      <xs:documentation>
                        Defines what entities may access this resource.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent>
                        <xs:extension base="Permissions" />
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:all>
              </xs:complexType>
            </xs:element>

            <xs:element name="SearchTables" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  A collection of SearchTables.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="SearchTable" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation>
                        A search table represents a tabular data source that supports parameterized queries.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent>
                        <xs:extension base="IdentifiableResourceType">
                          <xs:all>

                            <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                  This allows administrators and developers to define custom XML extensions which can become
                                  deserialized into business objects when the site is loaded.  These objects can then be
                                  referenced by a developer in order to obtain, for example, configuration information for
                                  a custom component.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Extensions" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>
                            <!-- End of Extensions -->

                            <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  A search table can have user defined properties for application specific purposes. Administrators may wish to
                                  define properties to control settings of the application that need to be known by the client API applications
                                  which consume a site.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Properties" />
                                </xs:complexContent>
                              </xs:complexType>

                              <!-- Ensure that the Name attribute is unique -->
                              <xs:unique name="UniqueSearchTablePropertyNameConstraint">
                                <xs:selector xpath="./Property" />
                                <xs:field xpath="@Name" />
                              </xs:unique>
                            </xs:element>
                            <!-- End of Properties -->

                            <xs:element name="Note" minOccurs="0" maxOccurs="1">
                              <xs:simpleType>
                                <xs:restriction base="xs:string"/>
                              </xs:simpleType>
                            </xs:element>
                            <!-- End of Note -->

                            <xs:element name="Parameters" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation>
                                  A collection of Search Table Parameters - those values which when retrieved by a spatial query
                                  on the layer will be used to populate a query against the underlying data source behind this
                                  Search Table.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:sequence>
                                  <xs:element name="Parameter" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                      <xs:documentation>
                                        A Search Table Parameter defines a variable that can be passed in to
                                        a Search Table command.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence>
                                        <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                          <xs:simpleType>
                                            <xs:restriction base="xs:string"/>
                                          </xs:simpleType>
                                        </xs:element>
                                      </xs:sequence>
                                      <xs:attribute name="DefaultValue" type="xs:string">
                                        <xs:annotation>
                                          <xs:documentation>
                                            A value to use as the default value for the parameter.  If no value is retrieved to populate this
                                            parameter value, the default is used.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="Name" type="xs:string" use="required">
                                        <xs:annotation>
                                          <xs:documentation>
                                            The name of the Parameter as it appears in the command string - this is used to dynamically populate
                                            the command string with the runtime parameter value.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of Parameter -->

                                </xs:sequence>
                              </xs:complexType>

                              <xs:unique name="UniqueSearchTableParameterNameConstraint">
                                <xs:selector xpath="./Parameter"/>
                                <xs:field xpath="@Name"/>
                              </xs:unique>
                            </xs:element>
                            <!-- End of Parameters -->

                          </xs:all>
                          <xs:attribute name="Command" type="xs:string" use="required">
                            <xs:annotation>
                              <xs:documentation>
                                The SQL or equivalent command that is to be executed on the data source.  The
                                command must follow the syntax of the ADO.Net provider that is defined in the
                                DataConnection referenced by the DataConnectionID attribute.  Within the command
                                you may specify one or more "replacement parameters" which, at runtime, will be
                                replaced with the values from the Parameters collection in this SearchTables.

                                Parameters are specified differently according to the ADO.Net provider used:

                                SqlClient uses "named parameters" with an "at sign" (@) at the front (e.g., @ZipCode).

                                OracleClient uses "named parameters" with a colon (:) at the front (e.g., :ZipCode).

                                Odbc uses a positional question mark only (e.g., ?). Please refer to the provider's documentation.

                                OleDb may or may not used "name parameters". Please refer to the provider's documentation.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="DataConnectionID" type="xs:string" use="required">
                            <xs:annotation>
                              <xs:documentation>
                                The ID of the DataConnection defined in this Site.xml file that this SearchTable will
                                use to access the external data source.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="MaximumRecords" type="xs:int" use="optional" default="1000">
                            <xs:annotation>
                              <xs:documentation>
                                The maximum number of records to return from a query. If this value is &lt;= 0 a maximum
                                is not applied.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>

                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>

              <!-- Ensure that the ID attribute is unique -->
              <xs:unique name="UniqueSearchTableIDConstraint">
                <xs:selector xpath="./SearchTable" />
                <xs:field xpath="@ID" />
              </xs:unique>
            </xs:element>
            <!-- End of SearchTables -->

            <xs:element name="Workflows" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  A collection of Workflows.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Workflow" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation>
                        A workflow represents a series of activities that has been put together using the Geocortex Workflow Designer.
                        Activities have inputs and generate outputs. The designer ships with a toolbox full of activities. These activities
                        can be server side activities or client side activities. It is also possible to build custom activities that will
                        solve tasks that are not supported by the pre-existing activities. Server side activities are built using .Net 4
                        while the client side activities can be built with the client technology of your choice.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent>
                        <xs:extension base="IdentifiableResourceType">
                          <xs:all>

                            <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  The Extensions element maintains a list of "Extensions", which apply to the parent element.
                                  This allows administrators and developers to define custom XML extensions which can become
                                  deserialized into business objects when the site is loaded.  These objects can then be
                                  referenced by a developer in order to obtain, for example, configuration information for
                                  a custom component.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Extensions" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>
                            <!-- End of Extensions -->

                            <xs:element name="Permissions" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation>
                                  Defines what entities may access this resource.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Permissions" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>

                            <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  A workflow can have user defined properties for application specific purposes.  Administrators may wish to
                                  define properties to control settings of the application that need to be known by the client API applications
                                  which consume a site.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Properties" />
                                </xs:complexContent>
                              </xs:complexType>

                              <!-- Ensure that the Name attribute is unique -->
                              <xs:unique name="UniqueWorkflowPropertyNameConstraint">
                                <xs:selector xpath="./Property" />
                                <xs:field xpath="@Name" />
                              </xs:unique>
                            </xs:element>
                            <!-- End of Properties -->

                            <xs:element name="Note" minOccurs="0" maxOccurs="1">
                              <xs:simpleType>
                                <xs:restriction base="xs:string"/>
                              </xs:simpleType>
                            </xs:element>
                            <!-- End of Note -->

                          </xs:all>
                          <xs:attribute name="RunOnStartup" type="BoolType">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                Whether to run the workflow on startup of the client application.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="Uri" type="xs:string" use="required">
                            <xs:annotation>
                              <xs:documentation>
                                The Uri to the workflow xaml file generated by the Geocortex Workflow Designer.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>

              <!-- Ensure that the ID attribute is unique -->
              <xs:unique name="UniqueWorkflowIDConstraint">
                <xs:selector xpath="./Workflow" />
                <xs:field xpath="@ID" />
              </xs:unique>
            </xs:element>
            <!-- End of Workflow -->

            <xs:element name="WorkflowsPermissions" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  The permissions that apply to the collection of workflows.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:all>
                  <xs:element name="Permissions" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                      <xs:documentation>
                        Defines what entities may access this resource.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent>
                        <xs:extension base="Permissions" />
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:all>
              </xs:complexType>
            </xs:element>
            
            <!-- Geocoding Endpoints -->
            <xs:element name="GeocodingEndpoints" id="GeocodingEndpoints" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  A collection of geocoding endpoints.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="GeocodingEndpoint" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">
                        Geocoding endpoints convert a geographic location (usually represented by a latitude/longitude pair) into a recognizable
                        location, such as a street address or the name of a building.
                        Most geocoding services are bi-directional. That is, they can convert geographic points to locations, or locations to
                        geographic points. Since a geographic point may be near several locations, queries that accept a geographic
                        point may return several "candidate" results, while reverse queries return a single geographic point.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent>
                        <xs:extension base="IdentifiableResourceType">
                          <xs:all>
                            <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  A geocoding endpoint can have user defined properties for application specific purposes. Administrators may wish to
                                  define properties to control settings of the application that need to be known by the client API applications which consume a site.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Properties" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>
                            <xs:element name="Parameters" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  A geocoding endpoint can be configured via its parameters to determine the geographic area in which to perform forward geocoding.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:sequence>
                                  <xs:element name="GeocodingEndpointParameterConfig" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                      <xs:documentation xml:lang="en">
                                        A geocoding endpoint parameter determines the geographic area in which to perform forward geocoding.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:attribute name="DisplayName" type="xs:string">
                                        <xs:annotation>
                                          <xs:documentation xml:lang="en">
                                            The display name of the geocoding parameter.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="IsRequired" type="BoolType">
                                        <xs:annotation>
                                          <xs:documentation xml:lang="en">
                                            Whether or not the geocoding parameter's value is mandatory.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="IsVisible" type="BoolType">
                                        <xs:annotation>
                                          <xs:documentation xml:lang="en">
                                            Whether or not the geocoding parameter should be displayed to display the parameter for user input.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="Name" type="xs:string">
                                        <xs:annotation>
                                          <xs:documentation xml:lang="en">
                                            The name of the geocoding parameter.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="Value" type="xs:string">
                                        <xs:annotation>
                                          <xs:documentation xml:lang="en">
                                            The value of the geocoding parameter that determines the geographic area in which to perform forward geocoding.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                    </xs:complexType>
                                  </xs:element>
                                </xs:sequence>
                              </xs:complexType>
                            </xs:element>
                          </xs:all>

                          <xs:attribute name="DisplayName" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The display name of the geocoding endpoint.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="GlobalSearchKey" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The address field to use for global search.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="IncludeInGlobalSearch" type="BoolType" default="False">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                If true, this geocoding service's results will be included in global search, otherwise, they won't.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>                          
                          <xs:attribute name="ServiceID" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The service ID identifies the type of service represented by the current GeocodingEndpoint element.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ConnectionString" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The connection string contains semi-colon-delimited name/value pairs which provide the values required by
                                a client to access a geocoding endpoint.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="UserName" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The user name to use for connecting to a secured geocoding service.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="Password" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The password for the user. This can either be encrypted or not encrypted, depending
                                on the PasswordEncrypted setting.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="PasswordEncrypted" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                Defines whether or not the supplied Password is encrypted or not. If set to true,
                                the Password must be encrypted. If set to false, the Password must not be encrypted.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="UseHttpAuthentication" type="BoolType" default="false">
                            <xs:annotation>
                              <xs:documentation>
                                Indicates whether the geocoding service requires HTTP authentication. If true, the Username and Password specified will be used.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ImpersonateWithActor" type="BoolType">
                            <xs:annotation>
                              <xs:documentation>
                                Whether or not to impersonate the actor.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="AllowedReferrers" type="xs:string" />
                          <xs:attribute name="AllowedIPAddresses" type="xs:string" />
                          <xs:attribute name="PrivateToken" type="xs:string" />
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>

              <!-- Ensure that the ID attribute is unique -->
              <xs:unique name="GeocodingEndpointIDConstraint">
                <xs:selector xpath="./GeocodingEndpoint" />
                <xs:field xpath="@ID" />
              </xs:unique>

            </xs:element>

            <!-- Geoprocessing Endpoints -->
            <xs:element name="GeoprocessingEndpoints" id="GeoprocessingEndpoints" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  A collection of geoprocessing endpoints.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="GeoprocessingEndpoint" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">
                        Geoprocessing endpoints perform analysis on, or retrieve data related to, geographic coordinates or geometries.
                        For example, an elevation service might calculate the elevations of points along a line and a drive-time service will
                        calculate a series of concentric polygons representing the distance that can be traveled from a given point in a certain time.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent>
                        <xs:extension base="IdentifiableResourceType">

                          <xs:all>
                            <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  A geocoding endpoint layer can have user defined properties for application specific purposes.  Administrators may wish to
                                  define properties to control settings of the application that need to be known by the client API applications
                                  which consume a site.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Properties" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>
                          </xs:all>

                          <xs:attribute name="DisplayName" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The dislplay name of the geocoding endpoint.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ServiceID" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The service ID identifies the type of service represented by the current GeoprocessingEndpoint element.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ConnectionString" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The connection string contains semi-colon-delimited name/value pairs which provide the values required by
                                a client to access a geoprocessing endpoint.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>

                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>

              <!-- Ensure that the ID attribute is unique -->
              <xs:unique name="GeoprocessingEndpointIDConstraint">
                <xs:selector xpath="./GeoprocessingEndpoint" />
                <xs:field xpath="@ID" />
              </xs:unique>

            </xs:element>

            <!-- Geometry Endpoints -->
            <xs:element name="GeometryEndpoints" id="GeometryEndpoints" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  A collection of geometry endpoints.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="GeometryEndpoint" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">
                        Geometry services perform geometric operations on submitted geometries. Buffering, simplification and reprojection are
                        examples of geometry services.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:complexContent>
                        <xs:extension base="IdentifiableResourceType">

                          <xs:all>
                            <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">
                                  A geometry endpoint can have user defined properties for application specific purposes.  Administrators may wish to
                                  define properties to control settings of the application that need to be known by the client API applications
                                  which consume a site.
                                </xs:documentation>
                              </xs:annotation>
                              <xs:complexType>
                                <xs:complexContent>
                                  <xs:extension base="Properties" />
                                </xs:complexContent>
                              </xs:complexType>
                            </xs:element>
                          </xs:all>

                          <xs:attribute name="DisplayName" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The dislplay name of the geocoding endpoint.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ServiceID" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The service ID identifies the type of service represented by the current GeoprocessingEndpoint element.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ConnectionString" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The connection string contains semi-colon-delimited name/value pairs which provide the values required by
                                a client to access a geometry endpoint.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="UserName" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The user name to use for connecting to a secured geometry service.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="Password" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                The password for the user. This can either be encrypted or not encrypted, depending
                                on the PasswordEncrypted setting.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="PasswordEncrypted" type="xs:string">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                Defines whether or not the supplied Password is encrypted or not. If set to true,
                                the Password must be encrypted. If set to false, the Password must not be encrypted.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="UseHttpAuthentication" type="BoolType" default="false">
                            <xs:annotation>
                              <xs:documentation>
                                Indicates whether the geometry service requires HTTP authentication. If true, the Username and Password specified will be used.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="ImpersonateWithActor" type="BoolType">
                            <xs:annotation>
                              <xs:documentation>
                                Whether or not to impersonate the actor.
                              </xs:documentation>
                            </xs:annotation>
                          </xs:attribute>
                          <xs:attribute name="AllowedReferrers" type="xs:string" />
                          <xs:attribute name="AllowedIPAddresses" type="xs:string" />
                          <xs:attribute name="PrivateToken" type="xs:string" />
                        </xs:extension>
                      </xs:complexContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>

              <!-- Ensure that the ID attribute is unique -->
              <xs:unique name="GeometryEndpointIDConstraint">
                <xs:selector xpath="./GeoprocessingEndpoint" />
                <xs:field xpath="@ID" />
              </xs:unique>

            </xs:element>

            <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  The Extensions element maintains a list of "Extensions", which apply to the parent element.
                  This allows administrators and developers to define custom XML extensions which can become
                  deserialized into business objects when the site is loaded.  These objects can then be
                  referenced by a developer in order to obtain, for example, configuration information for
                  a custom component.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:complexContent>
                  <xs:extension base="Extensions" />
                </xs:complexContent>
              </xs:complexType>
            </xs:element>
            <!-- End of Extensions -->

            <xs:element name="Note" minOccurs="0" maxOccurs="1">
              <xs:simpleType>
                <xs:restriction base="xs:string"/>
              </xs:simpleType>
            </xs:element>
            <!-- End of Note -->

          </xs:all>
          <xs:attribute name="Culture" type="CultureNameType">
            <xs:annotation>
              <xs:documentation>
                The name of the culture (language) to use for this site.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Description" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Descriptive text used to identify what the site is used for.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>    
          
          <xs:attribute name="Version" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                The version that this site was last saved as.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute ref="DataProvider">
            <xs:annotation>
              <xs:documentation>
                Specifies the default data provider (e.g. "Oracle", "SqlServer", etc.) for all layers in this site. Individual map services and layers can override this default.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="UnconfiguredCodeFieldsVisible" type="BoolType" default="true">
            <xs:annotation>
              <xs:documentation>
                Indicates whether code fields for coded value domains that are not configured in the Site.xml file should be visible. Individual map services and layers can override this setting.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <!-- KEY REFERENCES -->
    <xs:key name="DataConnectionKey">
      <xs:selector xpath="./DataConnections/DataConnection" />
      <xs:field xpath="@ID" />
    </xs:key>

    <xs:keyref name="DataConnectionKeyRef" refer="DataConnectionKey">
      <xs:selector xpath="./Map/Layers/Layer/DataLinks/DataLink" />
      <xs:field xpath="@DataConnection" />
    </xs:keyref>
  </xs:element>
  <!-- End of Site -->
 
  <xs:complexType name="ExternalConfigType">
    <xs:sequence minOccurs="0" maxOccurs="1">
      <xs:element name="Adapter">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax" />
          </xs:sequence>
          <xs:attribute name="Name" use="required">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Web Map" />
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="ID" use="optional" />
    <xs:attribute name="SiteID" use="optional" />
    <xs:attribute name="Uri" use="optional" />
  </xs:complexType>

  <xs:element name="GroupLayer">
    <xs:annotation>
      <xs:documentation>
        An organizational layer that can contain other layers or group layers within its SubLayers collection.
        A GroupLayer should be configured to correspond to a group layer as defined within the underlying
        map service.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:all>

        <xs:element name="SubLayers" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>
              Group Layers contain layers called sub layers.  These sub layers can be either Layers or GroupLayers.
              The SubLayers element contains the collection of sub layers belonging to this group layer.  Each
              sub layer in this collection should reference an existing sub layer within the group layer in
              the underlying map service.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
              <xs:element ref="GroupLayer" minOccurs="0" maxOccurs="unbounded" />
              <xs:element ref="Layer" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <!-- End of SubLayers-->

        <xs:element name="Permissions" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>
              Defines what entities may access this resource.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="Permissions" />
            </xs:complexContent>
          </xs:complexType>
        </xs:element>

        <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              The Extensions element maintains a list of "Extensions", which apply to the parent element.
              This allows administrators and developers to define custom XML extensions which can become
              deserialized into business objects when the site is loaded.  These objects can then be
              referenced by a developer in order to obtain, for example, configuration information for
              a custom component.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="Extensions" />
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
        <!-- End of Extensions -->

        <xs:element name="Properties" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              A group layer can have user defined properties for application specific purposes.  Administrators may wish to
              define properties to control settings of the application that need to be known by the client API applications
              which consume a site.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="Properties" />
            </xs:complexContent>
          </xs:complexType>

          <!-- Ensure that the Name attribute is unique -->
          <xs:unique name="UniqueGroupLayerPropertyNameConstraint">
            <xs:selector xpath="./Property" />
            <xs:field xpath="@Name" />
          </xs:unique>
        </xs:element>
        <!-- End of Properties -->

        <xs:element ref="ThemeSettings" minOccurs="0" maxOccurs="1" />

        <xs:element name="Note" minOccurs="0" maxOccurs="1">
          <xs:simpleType>
            <xs:restriction base="xs:string"/>
          </xs:simpleType>
        </xs:element>
        <!-- End of Note -->

      </xs:all>
      <xs:attributeGroup ref="MapLayerAttributes" />
      <xs:attribute name="IconUri" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            URI of an image for the group layer.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="__Type" type="xs:string" />
    </xs:complexType>
  </xs:element>
  <!-- End of GroupLayer -->

  <xs:element name="Layer">
    <xs:annotation>
      <xs:documentation>
        The definition of a Layer obtained from a Map Service, representing some spatial data.  A layer must
        correspond directly to a layer which is found in the running map service.  Layer elements correspond to layers
        in the map service when the Name attribute matches the name of a layer in the map service.  For this reason,
        it is important that your map services do not define more than one layer with the same name.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:all>

        <xs:element name="Fields" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Field" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    Provides a mechanism to change/set attribute on a field in a layer. The field must exist in the layer and must match the name defined in the map service.
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Name" type="xs:string" use="required">
                    <xs:annotation>
                      <xs:documentation>
                        Name of the field. This should match the real name of the field as defined in the map service.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="FocusField" type="BoolType" default="False">
                    <xs:annotation>
                      <xs:documentation>
                        Indicate if the field is a focus field.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Searchable" type="BoolType" default="true">
                    <xs:annotation>
                      <xs:documentation>
                        Indicates whether the field will be searched as part of the layer search.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="CanSymbolizeClassBreaks" type="BoolType" default="true">
                    <xs:annotation>
                      <xs:documentation>
                        Indicates whether the field can be used in class breaks renderer.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="CanSymbolizeUniqueValue" type="BoolType" default="true">
                    <xs:annotation>
                      <xs:documentation>
                        Indicates whether the field can be used in unique value renderer.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Visible" type="BoolType" default="True">
                    <xs:annotation>
                      <xs:documentation>
                        If true, the field will be available in reports and such, if false, it won't.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="DisplayName" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        Provide an alias for the field that will be used in the application.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="HyperlinkLabel" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation>
                        A label for the hyperlink.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <!-- End of Field -->

            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <!-- End of Fields -->

        <xs:element ref="LayerHyperlinks" minOccurs="0" maxOccurs="1"/>

        <xs:element name="FeatureHyperlinks" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FeatureHyperlink" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    A FeatureHyperlink element is used to configure a dynamically generated link for each feature within a report on this layer for example.
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>

                  <xs:all>
                    <xs:element name="Permissions" minOccurs="0" maxOccurs="1">
                      <xs:annotation>
                        <xs:documentation>
                          Defines what entities may access this resource.
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:complexContent>
                          <xs:extension base="Permissions" />
                        </xs:complexContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:all>

                  <xs:attribute name="EncodeUriReplacementValues" default="Automatic">
                    <xs:annotation>
                      <xs:documentation>
                        Whether to URL encode replacement values in the Uri.
                        Set to Always to ensure that replacement values are encoded. Set to
                        Never to ensure that replacement values are not encoded. Set to
                        Automatic to automatically determine whether replacement values
                        should be encoded. Automatic is the default.
                        If set to Automatic, URIs that consist entirely of a replacement
                        token (i.e. the replacement value itself is the full URI), the
                        replacement values will not be encoded. Otherwise, the replacement
                        values will be encoded.
                      </xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:enumeration value="Automatic" />
                        <xs:enumeration value="Always" />
                        <xs:enumeration value="Never" />
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="IconUri" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        URI of an image which represents the hyperlink you are trying to generate.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Target" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        Name of the target browser window which the hyperlink result will populate (e.g., _blank).
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Text" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        Text content of this control or component. The text to display in place of the hyperlink URI.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="ToolTip" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        Information shown to the user when the hyperlink is hovered over.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Uri" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        URI format string which can be used to dynamically insert field values within the URI.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <!-- End of FeatureHyperlink -->

            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <!-- End of FeatureHyperlinks -->

        <xs:element name="Charts" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="LayerChart" minOccurs="0" maxOccurs="unbounded">
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>

        <xs:element name="DataLinks" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>
              A collection of DataLinks, each of which can establish a relationship between the layer's spatial data
              and an external data source represented by a DataConnection defined in this site.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DataLink" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    A DataLink accesses external data and associates it to existing spatial data in the Layer.  The DataLink
                    is associated with a DataConnection defined in this Site.xml file, which describes the external data
                    source being "linked" to.
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:complexContent>
                    <xs:extension base="IdentifiableResourceType">
                      <xs:all>

                        <xs:element name="Parameters" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation>
                              A collection of DataLink Parameters - those values which when retrieved by a spatial query
                              on the layer will be used to populate a query against the underlying data source behind this
                              DataLink.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Parameter" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                  <xs:documentation>
                                    A DataLink Parameter defines a variable that can be passed in to
                                    a DataLink command.
                                  </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                      <xs:simpleType>
                                        <xs:restriction base="xs:string"/>
                                      </xs:simpleType>
                                    </xs:element>
                                  </xs:sequence>
                                  <xs:attribute name="DefaultValue" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        A value to use as the default value for the parameter.  If no value is retrieved to populate this
                                        parameter value, the default is used.
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="FeatureField" type="xs:string" use="required">
                                    <xs:annotation>
                                      <xs:documentation>
                                        The name of the Field from the layer that will be used to populate the
                                        variable in the command when a spatial query is executed against the layer.
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="Name" type="xs:string" use="required">
                                    <xs:annotation>
                                      <xs:documentation>
                                        The name of the Parameter as it appears in the command string - this is used to dynamically populate
                                        the command string with the runtime parameter value.
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:complexType>
                              </xs:element>
                              <!-- End of Parameter -->

                            </xs:sequence>
                          </xs:complexType>

                          <xs:unique name="UniqueDataLinkParameterNameConstraint">
                            <xs:selector xpath="./Parameter"/>
                            <xs:field xpath="@Name"/>
                          </xs:unique>
                        </xs:element>
                        <!-- End of Parameters -->

                        <xs:element name="Permissions" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation>
                              Defines what entities may access this resource.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="Permissions" />
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>

                        <xs:element name="Searches" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation>
                              A collection of DataLink Searches.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Search" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">
                                    A Search associates a DataLink with a SearchTable. This allows searching of "linked" data which can be mapped
                                    to features of the Layer.
                                  </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:complexContent>
                                    <xs:extension base="IdentifiableResourceType">
                                      <xs:attribute name="SearchTableID" type="xs:string" use="required">
                                        <xs:annotation>
                                          <xs:documentation>
                                            The ID of the SearchTable to use for performing queries into "linked" data.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="FeatureField" type="xs:string" use="required">
                                        <xs:annotation>
                                          <xs:documentation>
                                            The name of the Feature Field of the Layer that is related to the Table Field of the SearchTable results.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="TableField" type="xs:string" use="required">
                                        <xs:annotation>
                                          <xs:documentation>
                                            The name of the field in the SearchTable results that is related to the Feature Field of the Layer.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                    </xs:extension>
                                  </xs:complexContent>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <!-- End of Searches -->

                        <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">
                              The Extensions element maintains a list of "Extensions", which apply to the parent element.
                              This allows administrators and developers to define custom XML extensions which can become
                              deserialized into business objects when the site is loaded.  These objects can then be
                              referenced by a developer in order to obtain, for example, configuration information for
                              a custom component.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="Extensions" />
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>
                        <!-- End of Extensions -->

                        <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">
                              A data link can have user defined properties for application specific purposes.  Administrators may wish to
                              define properties to control settings of the application that need to be known by the client API applications
                              which consume a site.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="Properties" />
                            </xs:complexContent>
                          </xs:complexType>

                          <!-- Ensure that the Name attribute is unique -->
                          <xs:unique name="UniqueDataLinkPropertyNameConstraint">
                            <xs:selector xpath="./Property" />
                            <xs:field xpath="@Name" />
                          </xs:unique>
                        </xs:element>
                        <!-- End of Properties -->

                        <xs:element name="Note" minOccurs="0" maxOccurs="1">
                          <xs:simpleType>
                            <xs:restriction base="xs:string"/>
                          </xs:simpleType>
                        </xs:element>
                        <!-- End of Note -->

                      </xs:all>
                      <xs:attribute name="IsOneToOne" type="BoolType" default="false">
                        <xs:annotation>
                          <xs:documentation>
                            Indicates whether the data fetched by the datalink represent a one to one
                            relationship with the feature.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="Command" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            The SQL or equivalent command that is to be executed on the data source.  The
                            command must follow the syntax of the ADO.Net provider that is defined in the
                            DataConnection referenced by the DataConnectionID attribute.  Within the command
                            you may specify one or more "replacement parameters" which, at runtime, will be
                            replaced with the values from the Parameters collection in this DataLink.

                            Parameters are specified differently according to the ADO.Net provider used:

                            SqlClient uses "named parameters" with an "at sign" (@) at the front (e.g., @ZipCode).

                            OracleClient uses "named parameters" with a colon (:) at the front (e.g., :ZipCode).

                            Odbc uses a positional question mark only (e.g., ?). Please refer to the provider's documentation.

                            OleDb may or may not used "name parameters". Please refer to the provider's documentation.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="DataConnectionID" type="xs:string" use="required">
                        <xs:annotation>
                          <xs:documentation>
                            The ID of the DataConnection defined in this Site.xml file that this DataLink will
                            be using to access the external data source.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="ErrorAction" type="ErrorActionType">
                        <xs:annotation>
                          <xs:documentation>
                            The action to execute if the connection to the data source fails.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="Visible" type="BoolType" default="True">
                        <xs:annotation>
                          <xs:documentation>
                            If true, the DataLink should be presented in the user interface, if false, it should be hidden.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:extension>
                  </xs:complexContent>
                </xs:complexType>
              </xs:element>
              <!-- End of DataLink -->

            </xs:sequence>
          </xs:complexType>

          <!-- Ensure that the ID attribute is unique -->
          <xs:unique name="UniqueDataLinkIDConstraint">
            <xs:selector xpath="./DataLink" />
            <xs:field xpath="@ID" />
          </xs:unique>
        </xs:element>
        <!-- End of DataLinks -->

        <xs:element name="FeatureMaps" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>
              A collection of Feature Maps.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FeatureMap" minOccurs="1" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    A Feature Map is a representation of an individual feature from the layer as its own map.  They are
                    often used in reports to show a thumbnail image representation of a feature.

                    The normal extent of a feature map will be the minimum envelope encompassing the feature.
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:complexContent>
                    <xs:extension base="IdentifiableResourceType">
                      <xs:all>

                        <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">
                              The Extensions element maintains a list of "Extensions", which apply to the parent element.
                              This allows administrators and developers to define custom XML extensions which can become
                              deserialized into business objects when the site is loaded.  These objects can then be
                              referenced by a developer in order to obtain, for example, configuration information for
                              a custom component.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="Extensions" />
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>
                        <!-- End of Extensions -->

                        <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">
                              A feature map can have user defined properties for application specific purposes.  Administrators may wish to
                              define properties to control settings of the application that need to be known by the client API applications
                              which consume a site.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="Properties" />
                            </xs:complexContent>
                          </xs:complexType>

                          <!-- Ensure that the Name attribute is unique -->
                          <xs:unique name="UniqueFeatureMapPropertyNameConstraint">
                            <xs:selector xpath="./Property" />
                            <xs:field xpath="@Name" />
                          </xs:unique>
                        </xs:element>
                        <!-- End of Properties -->

                        <xs:element name="Note" minOccurs="0" maxOccurs="1">
                          <xs:simpleType>
                            <xs:restriction base="xs:string"/>
                          </xs:simpleType>
                        </xs:element>
                        <!-- End of Note -->

                      </xs:all>
                      <xs:attribute name="BufferDistance" type="xs:double" default="0.0">
                        <xs:annotation>
                          <xs:documentation>
                            The distance to buffer the feature.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="BufferUnit" type="UnitType" default="Other">
                        <xs:annotation>
                          <xs:documentation>
                            The unit type of the BufferDistance attribute.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="HighlightFeature" type="BoolType">
                        <xs:annotation>
                          <xs:documentation>
                            Whether or not to highlight the feature in the generated feature map image.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="HighlightColor" type="ColorType">
                        <xs:annotation>
                          <xs:documentation>
                            The color to highlight the feature if HighlightFeature is set to true.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="Resolution" type="xs:int" default="96">
                        <xs:annotation>
                          <xs:documentation>
                            The resolution of the image that will be generated from this Feature Map configuration.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:extension>
                  </xs:complexContent>
                </xs:complexType>
              </xs:element>
              <!-- End of FeatureMap -->

            </xs:sequence>
          </xs:complexType>

          <xs:unique name="UniqueFeatureMapIDConstraint">
            <xs:selector xpath="./FeatureMap" />
            <xs:field xpath="@ID" />
          </xs:unique>
        </xs:element>
        <!-- End of FeatureMaps -->

        <xs:element name="Permissions" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>
              Defines what entities may access this layer.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="Permissions" />
            </xs:complexContent>
          </xs:complexType>
        </xs:element>

        <xs:element name="Reports" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>
              A collection of Reports that are associated with this Layer.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">

              <xs:element name="LayerTemplateReport" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    A LayerTemplateReport is a report that is generated from a template report file (.rpx file, created with the Geocortex Report Designer).  A
                    layer template report will load the .RPX file and bind the fields in the template to the layer's data
                    when it is executed.
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:complexContent>
                    <xs:extension base="IdentifiableResourceType">
                      <xs:all>

                        <xs:element name="Permissions" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation>
                              Defines what entities may access this resource.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="Permissions" />
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>

                        <xs:element name="PrintJobSettings" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation>
                              PrintJobSettings defines the properties needed to process reports in an external process.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="PrintJobSettingsType" />
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>
                        <!-- End PrintJobSettings element -->

                        <xs:element name="SupportedOutputFormats" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation>
                              The output formats that will be supported (allowed) for this report.  Omitting the supported output formats will
                              indicate that all output formats are supported.  If; however, one or more output formats are listed in the
                              supported output formats collection then reports are confined to use these output formats and requests for
                              other formats will fail.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:all>
                              <xs:element name="Pdf" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                  <xs:documentation>
                                    PDF (portable document format) output type.
                                  </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:sequence />
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Rtf" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                  <xs:documentation>
                                    RTF (rich text format) output type.
                                  </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:sequence />
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Tiff" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                  <xs:documentation>
                                    TIFF output type.
                                  </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:sequence />
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Bmp" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                  <xs:documentation>
                                    BMP (bitmap) output type.
                                  </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:sequence />
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Gif" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                  <xs:documentation>
                                    GIF output type.
                                  </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:sequence />
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Jpeg" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                  <xs:documentation>
                                    JPEG output type.
                                  </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:sequence />
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Png" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                  <xs:documentation>
                                    PNG output type.
                                  </xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:sequence />
                                </xs:complexType>
                              </xs:element>
                            </xs:all>
                          </xs:complexType>
                        </xs:element>
                        <!-- End of SupportedOutputFormats -->

                        <xs:element name="MapTemplateReport" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation>
                              A MapTemplateReport is a report that is generated from a template report file (.rpx file, created with the Geocortex Report Designer). A
                              map template report will load the .RPX file and bind the fields in the template with the map's
                              data items, such as the map image, north arrow image, overview map image, etc.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="UniqueType">
                                <xs:all>

                                  <xs:element name="SupportedMapScales" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        A collection of Scale Item choices for use with the MapDataTemplateReport.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence>
                                        <xs:element name="ScaleItem" minOccurs="0" maxOccurs="unbounded">
                                          <xs:annotation>
                                            <xs:documentation>
                                              A Scale Item represents a choice of map scale that the user can make to display their
                                              map image at when they execute a MapDataTemplateReport.
                                            </xs:documentation>
                                          </xs:annotation>
                                          <xs:complexType>
                                            <xs:sequence />
                                            <xs:attribute name="DisplayName" type="xs:string" >
                                              <xs:annotation>
                                                <xs:documentation>
                                                  The text that will display for this scale item choice.
                                                </xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                            <xs:attribute name="Scale" type="xs:double" use="required">
                                              <xs:annotation>
                                                <xs:documentation>
                                                  The scale that the map image will be generated at.
                                                </xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                          </xs:complexType>
                                        </xs:element>
                                      </xs:sequence>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of SupportedMapScales -->

                                  <xs:element name="SupportedResolutions" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        A collection of Resolution choices for use with the MapDataTemplateReport.  Leaving this
                                        element empty implies that all resolutions are supported.  If you define one or more resolutions
                                        then those resolutions are used to validate the requests and requests for reports or maps with resolutions
                                        outside of the list of supported resolutions will fail.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence>
                                        <xs:element name="Resolution" minOccurs="1" maxOccurs="unbounded">
                                          <xs:annotation>
                                            <xs:documentation>
                                              A Resolution item represents a choice of image resolution that the user
                                              can make to display their map image at when they execute a MapDataTemplateReport.
                                            </xs:documentation>
                                          </xs:annotation>
                                          <xs:complexType>
                                            <xs:sequence>
                                              <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                                <xs:simpleType>
                                                  <xs:restriction base="xs:string"/>
                                                </xs:simpleType>
                                              </xs:element>
                                            </xs:sequence>
                                            <xs:attribute name="Dpi" type="DpiType" use="required">
                                              <xs:annotation>
                                                <xs:documentation>
                                                  The dpi (dots-per-inch) of the map image.
                                                </xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                            <xs:attribute name="DisplayName" type="xs:string">
                                              <xs:annotation>
                                                <xs:documentation>
                                                  The text that will display for this resolution choice.
                                                </xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                          </xs:complexType>
                                        </xs:element>
                                      </xs:sequence>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of SupportedResolutions -->

                                  <xs:element name="TextFields" minOccurs="0" maxOccurs="1">
                                    <xs:annotation>
                                      <xs:documentation>
                                        A collection of Text Fields.
                                      </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                      <xs:sequence>
                                        <xs:element name="TextField" minOccurs="0" maxOccurs="unbounded">
                                          <xs:annotation>
                                            <xs:documentation>
                                              A configurable text field in a template report.  A Text Field
                                              will map to a text or label control in a report template (.rpx file, created with the Geocortex Report Designer).
                                              Administrators can configure text fields values using this element, and it can also be displayed to the
                                              user to override values set by an administrator or report designer.
                                            </xs:documentation>
                                          </xs:annotation>
                                          <xs:complexType>
                                            <xs:sequence>
                                              <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                                <xs:simpleType>
                                                  <xs:restriction base="xs:string"/>
                                                </xs:simpleType>
                                              </xs:element>
                                            </xs:sequence>
                                            <xs:attribute name="Value" type="xs:string">
                                              <xs:annotation>
                                                <xs:documentation>
                                                  A default value for the text field.
                                                </xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                            <xs:attribute name="DataFieldName" type="xs:string" use="required">
                                              <xs:annotation>
                                                <xs:documentation>
                                                  The name of the DataField of the text or label control within the .RPX file being modified.
                                                </xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                            <xs:attribute name="Editable" type="BoolType" default="true">
                                              <xs:annotation>
                                                <xs:documentation>
                                                  Whether or not this text field should be shown to the user for them to edit.
                                                </xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                            <xs:attribute name="MultiLine" type="BoolType">
                                              <xs:annotation>
                                                <xs:documentation>
                                                  Whether or not the text field entry box should allow multiple lines of input.
                                                </xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                            <xs:attribute name="DisplayName" type="xs:string">
                                              <xs:annotation>
                                                <xs:documentation>
                                                  The name, or label, for the text field when shown to the user.
                                                </xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                          </xs:complexType>
                                        </xs:element>
                                      </xs:sequence>
                                    </xs:complexType>
                                  </xs:element>
                                  <!-- End of TextFields -->

                                  <xs:element name="Note" minOccurs="0" maxOccurs="1">
                                    <xs:simpleType>
                                      <xs:restriction base="xs:string"/>
                                    </xs:simpleType>
                                  </xs:element>
                                  <!-- End of Note -->

                                </xs:all>
                                <xs:attributeGroup ref="TemplateReportAttributes" />
                                <xs:attribute name="ScaleBarUnit" type="UnitType" default="Miles">
                                  <xs:annotation>
                                    <xs:documentation>
                                      The unit used to generate the scale bar distance when a scale bar is included in the Map Data Template Report.
                                    </xs:documentation>
                                  </xs:annotation>
                                </xs:attribute>
                                <xs:attribute name="MaximumResolution" type="xs:nonNegativeInteger" default="300">
                                  <xs:annotation>
                                    <xs:documentation>
                                      The maximum resolution to allow when map images are requested using this template.  Set this if you wish to override the default of 300.
                                    </xs:documentation>
                                  </xs:annotation>
                                </xs:attribute>
                              </xs:extension>
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>
                        <!-- End of MapTemplateReport -->

                        <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">
                              The Extensions element maintains a list of "Extensions", which apply to the parent element.
                              This allows administrators and developers to define custom XML extensions which can become
                              deserialized into business objects when the site is loaded.  These objects can then be
                              referenced by a developer in order to obtain, for example, configuration information for
                              a custom component.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="Extensions" />
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>
                        <!-- End of Extensions -->

                        <xs:element name="Properties" minOccurs="0" maxOccurs="1">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">
                              A layer template report can have user defined properties for application specific purposes.  Administrators may wish to
                              define properties to control settings of the application that need to be known by the client API applications
                              which consume a site.
                            </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="Properties" />
                            </xs:complexContent>
                          </xs:complexType>

                          <!-- Ensure that the Name attribute is unique -->
                          <xs:unique name="UniqueLayerTemplateReportPropertyNameConstraint">
                            <xs:selector xpath="./Property" />
                            <xs:field xpath="@Name" />
                          </xs:unique>
                        </xs:element>
                        <!-- End of Properties -->

                        <xs:element name="Note" minOccurs="0" maxOccurs="1">
                          <xs:simpleType>
                            <xs:restriction base="xs:string"/>
                          </xs:simpleType>
                        </xs:element>
                        <!-- End of Note -->

                      </xs:all>
                      <xs:attributeGroup ref="TemplateReportAttributes" />
                      <xs:attribute name="__Type" type="xs:string" />
                      <xs:attribute name="CustomWorkflowAssembly" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Name of the assembly which contains the custom reporting workflow to use.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="CustomWorkflowClassName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            Name of the class in the CustomWorkflowAssembly which represents the workflow to use.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="Description" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            The textual description of this report.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="IncludeFeatureMaps" type="BoolType">
                        <xs:annotation>
                          <xs:documentation>
                            Whether or not to generate Feature Maps for this Layer report.  Leave this set to False to improve performance
                            if feature maps are not needed for the report.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="OrderBy" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            The sort column or columns, and sort order of the data.
                            A string that contains the column name followed by "ASC" (ascending) or "DESC"
                            (descending). Columns are sorted ascending by default. Multiple columns can
                            be separated by commas.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="PerformDataLinking" type="BoolType">
                        <xs:annotation>
                          <xs:documentation>
                            Whether or not to include Data Linked data in this report.  Leave this set to False to improve performance if
                            Data Link data is not needed for the report.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="UseExternalReportGeneration" type="xs:boolean" default="false">
                        <xs:annotation>
                          <xs:documentation>
                            If set to true, the print will be generated using external print generation.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="TransformWorkflowUri" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            The URI of a workflow that will execute after the report data is generated but before it is formatted.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="Visible" type="BoolType" default="True">
                        <xs:annotation>
                          <xs:documentation>
                            If true, the report should be presented in the user interface, if false, it should be hidden.
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:extension>
                  </xs:complexContent>
                </xs:complexType>
              </xs:element>
              <!-- End of LayerTemplateReport -->

            </xs:sequence>
          </xs:complexType>

          <xs:unique name="UniqueLayerTemplateReportIDConstraint">
            <xs:selector xpath="./LayerTemplateReport" />
            <xs:field xpath="@ID" />
          </xs:unique>
        </xs:element>
        <!-- End of Layer Reports -->

        <xs:element name="Styles" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="LayerStyle" minOccurs="0" maxOccurs="unbounded">
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>

        <xs:element name="Extensions" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              The Extensions element maintains a list of "Extensions", which apply to the parent element.
              This allows administrators and developers to define custom XML extensions which can become
              deserialized into business objects when the site is loaded.  These objects can then be
              referenced by a developer in order to obtain, for example, configuration information for
              a custom component.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="Extensions" />
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
        <!-- End of Extensions -->

        <xs:element name="Properties" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              A layer can have user defined properties for application specific purposes.  Administrators may wish to
              define properties to control settings of the application that need to be known by the client API applications
              which consume a site.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="Properties" />
            </xs:complexContent>
          </xs:complexType>

          <!-- Ensure that the Name attribute is unique -->
          <xs:unique name="UniqueLayerPropertyNameConstraint">
            <xs:selector xpath="./Property" />
            <xs:field xpath="@Name" />
          </xs:unique>
        </xs:element>
        <!-- End of Properties -->

        <xs:element ref="ThemeSettings" minOccurs="0" maxOccurs="1" />

        <xs:element name="Note" minOccurs="0" maxOccurs="1">
          <xs:simpleType>
            <xs:restriction base="xs:string"/>
          </xs:simpleType>
        </xs:element>
        <!-- End of Note -->

      </xs:all>
      <xs:attributeGroup ref="MapLayerAttributes" />
      <xs:attribute name="__Type" type="xs:string" />
      <xs:attribute name="CanCopyFeature" type="BoolType" default="false">
        <xs:annotation>
          <xs:documentation>
            Indicates whether features in the layer can be selected as possible candidates for a copy operation to an edit layer.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="DrawIndex" type="xs:int" use="optional">
        <xs:annotation>
          <xs:documentation>
            The drawing index of the layer.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="FeatureLabel" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The format for the label of a feature. Used in Map Tips for example.
            The label text can be dynamically substituted with a field value using the {FIELD_NAME} syntax.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="FeatureBorderColor" type="ColorType">
        <xs:annotation>
          <xs:documentation>
            The border color to use when highlighting features
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="FeatureBorderWidth" type="xs:double">
        <xs:annotation>
          <xs:documentation>
            The border width to use when highlighting features
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="FeatureDescription" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The format for the description of a feature. Used in Map Tips for example.
            The description text can be dynamically substituted with a field value using the {FIELD_NAME} syntax.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="FeatureFillColor" type="ColorType">
        <xs:annotation>
          <xs:documentation>
            The fill color to use when highlighting features
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="FeatureLongDescription" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The format for the long description of a feature. Used in Map Tips for example.
            The description text can be dynamically substituted with a field value using the {FIELD_NAME} syntax.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="FeatureZoomFactor" type="xs:double">
        <xs:annotation>
          <xs:documentation>
            The zoom factor to use when zooming to a feature. For example, if this is set to a value of 3, then when
            the feature is zoomed to, the feature's extent will be expanded by a factor of 3.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="FeatureZoomScale" type="xs:double">
        <xs:annotation>
          <xs:documentation>
            The scale to display a feature at when zooming to to a feature in this layer. This value is just the lower
            part of the scale, expressed as an integer.  For example, to configure a value of 1:20,000, configure the
            FeatureZoomScale to "20000".
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="FilterWorkflowUri" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The URI of a workflow for filtering the content of the layer.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="IconUri" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The URI to the icon that should be used for the layer.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Identifiable" type="BoolType" default="false">
        <xs:annotation>
          <xs:documentation>
            Indicates whether the layer will be used in identify operations.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="IncludeInLegend" type="BoolType" default="true">
        <xs:annotation>
          <xs:documentation>
            Indicates whether the layer will be included in the legend in print operations.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Queryable" type="BoolType" default="true">
        <xs:annotation>
          <xs:documentation>
            Indicates whether the layer will be used in query operations.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="ShowMapTips" type="BoolType" default="false">
        <xs:annotation>
          <xs:documentation>
            Indicates whether map tips will be shown for this layer.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Searchable" type="BoolType" default="false">
        <xs:annotation>
          <xs:documentation>
            Indicates whether the layer will be used in search operations.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Snappable" type="BoolType" default="true">
        <xs:annotation>
          <xs:documentation>
            Indicates whether the layer can have snapping enabled on it, for editing and markup operations.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SnappingEnabled" type="BoolType" default="false">
        <xs:annotation>
          <xs:documentation>
            Indicates whether the layer has snapping enabled by default.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="StyleName" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The name of the style to use for rendering the layer. Applies to WMS layers.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="ShowLabels" type="BoolType">
        <xs:annotation>
          <xs:documentation>
            Indicates whether the labels for a particular layer should be shown.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="UnconfiguredFieldsVisible" type="BoolType" default="true">
        <xs:annotation>
          <xs:documentation>
            Indicates whether fields that are not configured in the Site.xml file should be visible.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="UnconfiguredCodeFieldsVisible" type="BoolType">
        <xs:annotation>
          <xs:documentation>
           Indicates whether code fields for coded value domains that are not configured in the Site.xml file should be visible. If not explicitly set, this value will be inherited from the parent map service.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="UnconfiguredFieldsSearchable" type="BoolType" default="true">
        <xs:annotation>
          <xs:documentation>
            Indicates whether fields that are not configured in the Site.xml file should be included in global search.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="UnconfiguredFieldsCanSymbolizeClassBreaks" type="BoolType" default="true">
        <xs:annotation>
          <xs:documentation>
            Indicates whether fields that are not configured in the Site.xml file should be included in class breaks renderer.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="UnconfiguredFieldsCanSymbolizeUniqueValue" type="BoolType" default="true">
        <xs:annotation>
          <xs:documentation>
            Indicates whether fields that are not configured in the Site.xml file should be included in unique value renderer.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="UnconfiguredRelationshipsVisible" type="BoolType" default="true">
        <xs:annotation>
          <xs:documentation>
            Indicates whether relationships that are not configured in the Site.xml file should be visible.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="DynamicDefinition" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Indicates whether the layer is dynamic.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute ref="DataProvider">
        <xs:annotation>
          <xs:documentation>
            The name of the underlying data provider for this layer, e.g. "SqlServer", "Oracle", etc.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="ShowFeatureHyperlinks">
        <xs:annotation>
          <xs:documentation>
            The display preference for feature hyperlinks.
          </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="ShowAll"/>
            <xs:enumeration value="DisableBrokenLinks"/>
            <xs:enumeration value="HideBrokenLinks"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="LayerListID" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            The item in the layer list that is associated with this layer. 
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!-- End of Layer -->

  <xs:element name="LayerHyperlinks">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="LayerHyperlink" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>
              A LayerHyperlink element is used to configure a dynamically generated link for each layer.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="EncodeUriReplacementValues" default="Automatic">
              <xs:annotation>
                <xs:documentation>
                  Whether to URL encode replacement values in the Uri.
                  Set to Always to ensure that replacement values are encoded. Set to
                  Never to ensure that replacement values are not encoded. Set to
                  Automatic to automatically determine whether replacement values
                  should be encoded. Automatic is the default.
                  If set to Automatic, URIs that consist entirely of a replacement
                  token (i.e. the replacement value itself is the full URI), the
                  replacement values will not be encoded. Otherwise, the replacement
                  values will be encoded.
                </xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="Automatic" />
                  <xs:enumeration value="Always" />
                  <xs:enumeration value="Never" />
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="IconUri" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  URI of an image which represents the hyperlink you are trying to generate.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Target" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  Name of the target browser window which the hyperlink result will populate (e.g., _blank).
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Text" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  Text content of this control or component. The text to display in place of the hyperlink URI.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ToolTip" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  Information shown to the user when the hyperlink is hovered over.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Uri" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  URI format string which can be used to dynamically insert field values within the URI.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <!-- End of LayerHyperlink -->
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="LayerChart">
    <xs:annotation>
      <xs:documentation>
        The configuration of a single chart.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ChartConfig">
          <xs:annotation>
            <xs:documentation>
              Chart-specific configuration settings.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="AreaConfig"/>
              <xs:element name="CategoryConfig">
                <xs:annotation>
                  <xs:documentation>
                    The configuration of the charting category. Only set for linear charts.
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element ref="AxisConfig"/>
                    <xs:element ref="FieldConfig"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element ref="LegendConfig"/>
              <xs:element name="SeriesConfigCollection" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>
                    The collection of series configurations.
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ChartSeries" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>
                          The configuration of a single chart series.
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element ref="AxisConfig"/>
                          <xs:element ref="FieldConfig"/>
                          <xs:element ref="SeriesBreakConfig"/>
                        </xs:sequence>
                        <xs:attribute name="Color" type="ColorType">
                          <xs:annotation>
                            <xs:documentation>
                              The color of the series. This color is displayed in the chart area and on the chart legend.
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="DisplayName" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              The series display name, shown on the chart axis and legend.
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ID" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              Unique series ID.
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="LabelType" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              The label type of point labels in the chart area.
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="MarkerType" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              The type of marker used for specific chart types (eg. line and spline).
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="SeriesType" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              The type of series. Valid only for linear charts.
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="Title" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              Series title.
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ValueAggregatorName" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              The name of the value aggregator used.
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ValueFormat" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              The format of the input data.
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="ChartType" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  The type of chart.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="FlipChart" type="BoolType">
              <xs:annotation>
                <xs:documentation>
                  Indicates whether the chart should be flipped 90 degrees.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Visible" type="BoolType">
              <xs:annotation>
                <xs:documentation>
                  Indicates whether the chart is publicly visible in the Viewer.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="DisplayName" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Chart display name.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="ID" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Unique chart ID.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="ChartFeatureType" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Indicates whether the chart can be used for charting multiple features or single features.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="DefaultChart" type="BoolType">
        <xs:annotation>
          <xs:documentation>
            Indicates whether the chart is the default chart displayed when opening the charting view in the Viewer.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!-- End of LayerChart -->

  <xs:element name="LayerStyle">
    <xs:annotation>
      <xs:documentation>
        The configuration of an alternate style for a layer.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="IdentifiableResourceType">
          <xs:attribute name="Definition" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                The definition of the layer style. For example, an ArcGIS renderer represented as a JSON string.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="AreaConfig">
    <xs:annotation>
      <xs:documentation>
        The configuration of the chart area.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="ActionFeatureDetails" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether clicking a chart point will display the feature details for the first feature related to that chart point.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ActionPan" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether clicking a chart point will pan to the corresponding features on the map.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ActionRunCommand" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether clicking a chart point will run a specified user command.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ActionSelect" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether clicking a chart point will select the corresponding features on the map.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ActionZoom" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether clicking a chart point will zoom to the corresponding features on the map.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Background" type="ColorType">
            <xs:annotation>
              <xs:documentation>
                The background color of the chart.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ColorPalette" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                The name of the color palette style to use.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="CommandName" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                The name of the command to run when clicking on a chart point if ActionRunCommand is enabled.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="CommandParameter" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                The command parameter to pass in when running a command.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="DragMode" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Sets the event that occurs when dragging in the chart area.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="EnableColorPalette" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether a pre-defined color palette will be used to assign colors to the chart series.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="EnableCommonSeriesRange" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether all series will use the same axis range.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="EnableHorizontalZoom" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether the chart can be zoomed into for the x-axis. Also enables scrolling on this axis.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="EnableTrackBall" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether a trackball is shown for the nearest chart point.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="EnableVerticalZoom" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether the chart can be zoomed into for the y-axis. Also enables scrolling on this axis.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Foreground" type="ColorType">
            <xs:annotation>
              <xs:documentation>
                The foreground color of the chart. Sets the color for text and lines.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ShowHorizontalGridLines" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether horizontal grid lines are displayed in the background of the chart.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ShowHorizontalStrips" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether horizontal strips are displayed in the background of the chart.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ShowLabels" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether a label is displayed for each chart element. Only valid for pie chart slcies.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ShowToolTips" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether a tooltip is displayed when hovering over a chart element.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ShowVerticalGridLines" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether vertical grid lines are displayed in the background of the chart.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ShowVerticalStrips" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether vertical strips are displayed in the background of the chart.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!-- End of AreaConfig -->

  <xs:element name="AxisConfig">
    <xs:annotation>
      <xs:documentation>
        The configuration of a chart axis. For a linear chart, the x-axis has a separate configuration, as well as each series.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="AxisLabelMode" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                The mode used to display labels on the axis. Set to "None" if no labels are to be displayed.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Maximum" type="xs:double">
            <xs:annotation>
              <xs:documentation>
                Sets the maximum value of the axis. Only used if the series is numerical.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Minimum" type="xs:double">
            <xs:annotation>
              <xs:documentation>
                Sets the minimum value of the axis. Only used if the series is numerical.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="PositionOpposite" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Indicates whether the axis is positioned on the opposite side of the chart.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ReverseValues" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Indicates whether data on this axis is sorted in descending order instead of ascending.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ShowLabels" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether labels are displayed on the axis.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ShowTicks" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether ticks are displayed on the axis.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Title" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                The axis title. This is displayed above or below the axis.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Visible" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether the axis is displayed.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!-- End of AxisConfig -->

  <xs:element name="BaseMapSettings">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="BaseMapSetting" minOccurs="1" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              A reference to a base map in which the parent map service will be available.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="ID" type="xs:string" use="required">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  ID of a base map in which the parent map service will be available.  The ID must be one of the IDs
                  already defined in the Site/Map configuration.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- End of BaseMapSettings -->
  
  <xs:element name="FieldConfig">
    <xs:annotation>
      <xs:documentation>
        The configuration for a single field on a chart.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="DataLinkId" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                ID of the data link. Blank if no data link is configured.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="DisplayFormat" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                The display format of the field in the chart.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="IsContinuous" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether the field will be displayed as a DateTime continuous axis. Only valid for DateTime fields.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="IsNumerical" type="BoolType">
            <xs:annotation>
              <xs:documentation>
                Indicates whether the field will be displayed as a linear axis. Only valid for numerical fields.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Name" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Name of the field. If a data link is set, this is the name of the data link field.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="SortingFormat" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                The sorting format of the field in the chart.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="SourceType" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Source of the specified field.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!-- End of FieldConfig -->

  <xs:element name="LegendConfig">
    <xs:annotation>
      <xs:documentation>
        The configuration for the chart's legend.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="Position" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Position of the chart in the chart area. Valid positions are left, right, top, bottom, or none.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Title" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Title of the legend. This is displayed above the legend item list.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!-- End of LegendConfig -->

  <xs:element name="SeriesBreakConfig">
    <xs:annotation>
      <xs:documentation>
        The configuration of a series break on a chart series.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="FieldConfig"/>
      </xs:sequence>
      <xs:attribute name="SeriesBreakType" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Type of series break used to separate field values.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!-- End of SeriesBreakConfig -->

  <xs:element name="ThemeSettings">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ThemeSetting" minOccurs="1" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              A reference to a theme in which the parent object will be available, and optional additional
              configuration for the parent object such as whether it will be initially visible in the map.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="ID" type="xs:string" use="required">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  ID of a theme in which the parent layer will be available.  The ID must be one of the IDs
                  already defined in the Site/Map configuration.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Visible" type="BoolType">
              <xs:annotation>
                <xs:documentation xml:lang="en">
                  Whether or not the parent layer will be visible in the theme.  If not specified, the layer's
                  visibility will be inherited from the site settings.
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!-- End of ThemeSettings -->

  <xs:element name="FeatureClustering">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        A reference to feature clustering parameters of a map service.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="UserCanToggle" type="BoolType">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Flag that indicates whether end users are allowed to enable the feature clustering or declustering.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Enabled" type="BoolType">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Flag that indicates whether the feature clustering settings are enabled.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="BackgroundColor" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Background color of the interactive cluster.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="LabelColor" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Label or foreground color of the interactive cluster.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="MaximumFeatures" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Maximum number of features in an interactive cluster. If a cluster exceeds the size limit it will not be interactive anymore.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Radius" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Radius of a cluster in pixels.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>            
    </xs:complexType>
  </xs:element>
  <!-- End of FeatureClustering -->

  <xs:element name="FeatureHeatMaps">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        A reference to feature heat map parameters of a map service.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:all>

        <xs:element name="GradientStopCollection" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>
              A collection of GradientStop colors. These are used to configure the
              heat map appearance.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GradientStop" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    A single GradientStop defines a color and color offset for a
                    single heat map slice.
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Color" type="ColorType">
                    <xs:annotation>
                      <xs:documentation>
                        The hexadecimal color value for the gradient.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Offset" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        The offset of the color gradient. Must be a value between 0 and 1, and must follow on from the previous
                        color gradient offset.
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>

      </xs:all>
      <xs:attribute name="HeatMapUserCanToggle" type="BoolType">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Flag that indicates whether end users are allowed to enable/disable heat maps.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="HeatMapEnabled" type="BoolType">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Flag that indicates whether the feature layer is displayed as a heat map by default.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Intensity" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Heat map intensity value.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="RespectScaleRange" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Whether the heat map respects a layer's scale range.
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!-- End of FeatureHeatMaps -->

  <!-- ATTRIBUTE GROUPS -->

  <xs:attributeGroup name="LayerAttributes" id="LayerAttributes">
    <xs:attribute name="Name" type="xs:string" use="required" />
  </xs:attributeGroup>

  <xs:attributeGroup name="MapLayerAttributes" id="MapLayerAttributes">
    <xs:attributeGroup ref="LayerAttributes" />
    <xs:attribute name="DisplayName" type="xs:string" />
    <xs:attribute name="Description" type="xs:string" />
    <xs:attribute name="Visible" type="BoolType"/>
    <xs:attribute name="NativeID" type="xs:string"/>
    <xs:attribute name="IncludeInLayerList" type="BoolType" default="true">
      <xs:annotation>
        <xs:documentation>
          Indicates whether the layer will be included in the layer list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IsExpanded" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>
          Specifies whether the group layer should be expanded or not when it is rendered in a layer list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="AllowSymbolization" type="BoolType" default="true">
      <xs:annotation>
        <xs:documentation>
          Indicates whether the layer allows symbolization.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IsCatalogLayer" type="BoolType" default="false">
      <xs:annotation>
        <xs:documentation>
          Whether this layer is defined in a layer catalog.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="MapServiceBaseAttributes" id="MapServiceBaseAttributes">
    <xs:attribute name="ConnectionString" type="xs:string" use="required" />
    <xs:attribute name="ShortDisplayName" type="xs:string" />
    <xs:attribute name="FailureAction" type="FailureActionType" />
    <xs:attribute name="Function" type="MapServiceFunction" default="Operational"/>
    <xs:attribute name="BaseMapGroup" type="xs:string" />
    <xs:attribute name="Username" type="xs:string" />
    <xs:attribute name="Password" type="xs:string" />
    <xs:attribute name="PasswordEncrypted" type="BoolType" />
    <xs:attribute name="AllowedReferrers" type="xs:string" />
    <xs:attribute name="AllowedIPAddresses" type="xs:string" />
    <xs:attribute name="PrivateToken" type="xs:string" />
    <xs:attribute name="GisProxyID" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          For protected map services, specifies the ID of the proxy configuration that should be used to connect to the map service.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="UseHttpAuthentication" type="BoolType" default="false">
      <xs:annotation>
        <xs:documentation>
          Indicates whether the map service requires HTTP authentication. If true, the Username and Password specified will be used.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="FilterWorkflowUri" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          The URI of a workflow for filtering the content of layers of the map service.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IconUri" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          URI of an image for the map service.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Opacity" type="OpacityType" default="1.0">
      <xs:annotation>
        <xs:documentation>
          The overriding opacity setting for layers from this Map Service.  Valid values are between 0 and 1.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="QueryTransformWorkflowUri" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          The URI of a workflow to run after a server side query operation on this map service that can transform the query result data.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Visible" type="BoolType" default="true">
      <xs:annotation>
        <xs:documentation>
          If true, the map service (and all layers) is visible on startup. If false, the map service is not shown on startup.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IncludeInLayerList" type="BoolType" default="true">
      <xs:annotation>
        <xs:documentation>
          Indicates whether the map service will be included in the layer list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DefaultAllowSymbolization" type="BoolType" default="true">
      <xs:annotation>
        <xs:documentation>
          Indicates whether this map service will allow symbolization of all its layers by default.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="HeatMapCapable" type="BoolType" default="false">
      <xs:annotation>
        <xs:documentation>
          Indicates whether this map service can have a heat map visualization applied to it.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IsExpanded" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>
          Specifies whether the service should be expanded or not when it is rendered in a layer list.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Description" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          A description of the map service.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Copyright" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Copyright text for the map service.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IncludeCopyright" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>
          Whether to include Copyright text in Print/Export
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ImpersonateWithActor" type="BoolType">
      <xs:annotation>
        <xs:documentation>
          Whether or not to impersonate the actor.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="QueryProviderName" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          If specified, the query functionality of the map service will be delegated to another provider.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SearchNonTextFields" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Specifies whether or not non-text fields should be searchable.  Examples of non-text fields are numeric
          and date fields.  This can be overridden by explicitly setting the Searchable property of an individual field.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="UpdateInterval" type="xs:int">
      <xs:annotation>
        <xs:documentation>
          The interval in seconds that a client application should wait between automatic updates of this map service.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="OverrideTemporalSettings" type="BoolType" default="false">
      <xs:annotation>
        <xs:documentation>
          Indicates whether or not the we are overriding the time settings of a time aware map service
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="StartTime" type="xs:string" >
      <xs:annotation>
        <xs:documentation>
          The start time of a time interval
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="EndTime" type="xs:string" >
      <xs:annotation>
        <xs:documentation>
          The end time of a time interval
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ServiceType" type="xs:string" >
      <xs:annotation>
        <xs:documentation>
          The type of the service. For example, Bing|Dynamic|Feature|GeoRss|Image|Tiled|WMS|WMTS. This attribute 
          provides the ability to override the service type value defined by the service.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="InstantSearch" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>
          Specifies whether or not the Geocortex Instant Search is enabled for the map service.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="InstantSearchAttachments" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>
          Specifies whether or not attachments are indexed if Geocortex Instant Search is enabled for the map service.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="LayerListID" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          The item in the layer list that is associated with this map service. Only applicable to tiled services and single-layer services 
          such as GeoRSS services.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="MapServiceAttributes" id="MapServiceAttributes">
    <xs:attribute name="ProviderInvariantName" type="MapServiceProviderType" use="required" />
    <xs:attribute name="SupportedImageWidth" type="xs:nonNegativeInteger">
      <xs:annotation>
        <xs:documentation>
          The maximum supported Image Width that this Map Service can generate.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SupportedImageHeight" type="xs:nonNegativeInteger">
      <xs:annotation>
        <xs:documentation>
          The maximum supported Image Height that this Map Service can generate.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ImageFormat" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          The map service image format.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="TileMatrixSet" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Tile matrix set, for WMTS layers.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SpatialReference" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          The spatial reference code for WMS layers, as supported by the WMS.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="RequestEncoding" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Determines how image requests are made to the server.  For WMTS, this may be set to either RESTful or KVP (KVP is the default if not specified).
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="DataProvider">
      <xs:annotation>
        <xs:documentation>
          Specifies the default data provider (e.g. "Oracle", "SqlServer", etc.) for all layers in this map service. Individual layers can override this default.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="UnconfiguredCodeFieldsVisible" type="BoolType">
      <xs:annotation>
        <xs:documentation>
          Indicates whether code fields for coded value domains that are not configured in the Site.xml file should be visible. Individual layers can override this setting. If not explicitly set, this value will be inherited from the site config.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="FeatureLayerAttributes" id="FeatureLayerAttributes">
    <xs:attribute name="AutoSave" type="BoolType">
      <xs:annotation>
        <xs:documentation>
          An indication of whether edits to the client layer's graphics collection are auto-submitted to the service.
          Default is true.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Color" type="ColorType">
      <xs:annotation>
        <xs:documentation>
          The color to render symbols with.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="DisableClientCaching" type="BoolType">
      <xs:annotation>
        <xs:documentation>
          If true, prevents REST requests from being cached on the client.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="GeometryEnvelope" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          A comma seperated list of coordinates representing a geometry to use as a filter on the feature layer.  Only features that
          fall within this envelope will be shown.  In general, you should not use this property in conjunction with GeometryWKT.  They
          are both means of specifying a geometry filter, but the envelope is generally easier to specify, since you don't need to understand
          the more complex well known text syntax.  If both GeometryWKT and GeometryEnvelope are specified, GeometryWKT will take precedence.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="GeometryWKT" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          The geometry to use as a filter on the feature layer, specified as well known text.  Only features that
          fall within this envelope will be shown.  In general, you should not use this property in conjunction with GeometryEnvelope.  They
          are both means of specifying a geometry filter, but the envelope is generally easier to specify, since you don't need to understand
          the more complex well known text syntax.  The GeometryWKT has the advantage of being able to specify more complex geometry, such as
          a polygon.  If both GeometryWKT and GeometryEnvelope are specified, GeometryWKT will take precedence.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ObjectIds" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          A comma separated list of ObjectIDs that should be used as a filter on the feature layer.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="OnDemandCacheSize" type="xs:nonNegativeInteger">
      <xs:annotation>
        <xs:documentation>
          The number of features that will be cached in client side memory so they do no have to be requeried for.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="OutFields" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          The number of features held in cache beyond what is in the current extent when Mode is OnDemand.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="QueryMode" type="FeatureLayerModeType">
      <xs:annotation>
        <xs:documentation>
          Describes how the layer queries the service. Default is Snapshot mode.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SelectionColor" type="ColorType">
      <xs:annotation>
        <xs:documentation>
          The color of selected features when using ArcGIS feature layer method of selecting.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Where" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          The where clause for the query filter. This can be any legal SQL where clause operating on the fields in the layer is allowed, for example: "POP2000 > 350000".
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="TemplateReportAttributes">
    <xs:attribute name="TemplateAssembly" type="xs:string"/>
    <xs:attribute name="TemplateClassName" type="xs:string" />
    <xs:attribute name="TemplateUri" type="xs:string" />
  </xs:attributeGroup>


  <!-- SIMPLE TYPES -->

  <xs:simpleType name="BoolType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="true" />
      <xs:enumeration value="false" />
      <xs:enumeration value="True" />
      <xs:enumeration value="False" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ColorType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="HexColorType" />
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="NamedColorType" />
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="CultureNameType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Afrikaans - South Africa (af-ZA)" />
      <xs:enumeration value="Albanian - Albania (sq-AL)" />
      <xs:enumeration value="Arabic - Algeria (ar-DZ)" />
      <xs:enumeration value="Arabic - Bahrain (ar-BH)" />
      <xs:enumeration value="Arabic - Egypt (ar-EG)" />
      <xs:enumeration value="Arabic - Iraq (ar-IQ)" />
      <xs:enumeration value="Arabic - Jordan (ar-JO)" />
      <xs:enumeration value="Arabic - Kuwait (ar-KW)" />
      <xs:enumeration value="Arabic - Lebanon (ar-LB)" />
      <xs:enumeration value="Arabic - Libya (ar-LY)" />
      <xs:enumeration value="Arabic - Morocco (ar-MA)" />
      <xs:enumeration value="Arabic - Oman (ar-OM)" />
      <xs:enumeration value="Arabic - Qatar (ar-QA)" />
      <xs:enumeration value="Arabic - Saudi Arabia (ar-SA)" />
      <xs:enumeration value="Arabic - Syria (ar-SY)" />
      <xs:enumeration value="Arabic - Tunisia (ar-TN)" />
      <xs:enumeration value="Arabic - U.A.E. (ar-AE)" />
      <xs:enumeration value="Arabic - Yemen (ar-YE)" />
      <xs:enumeration value="Armenian - Armenia (hy-AM)" />
      <xs:enumeration value="Azeri - Cyrillic, Azerbaijan (az-Cyrl-AZ)" />
      <xs:enumeration value="Azeri - Latin, Azerbaijan (az-Latn-AZ)" />
      <xs:enumeration value="Basque - Basque (eu-ES)" />
      <xs:enumeration value="Belarusian - Belarus (be-BY)" />
      <xs:enumeration value="Bosnian - Latin, Bosnia and Herzegovina (bs-Latn-BA)" />
      <xs:enumeration value="Bulgarian - Bulgaria (bg-BG)" />
      <xs:enumeration value="Catalan - Catalan (ca-ES)" />
      <xs:enumeration value="Chinese - Hong Kong S.A.R. (zh-HK)" />
      <xs:enumeration value="Chinese - Macao S.A.R. (zh-MO)" />
      <xs:enumeration value="Chinese - People's Republic of China (zh-CN)" />
      <xs:enumeration value="Chinese - Simplified (zh-CHS)" />
      <xs:enumeration value="Chinese - Singapore (zh-SG)" />
      <xs:enumeration value="Chinese - Taiwan (zh-TW)" />
      <xs:enumeration value="Chinese - Traditional (zh-CHT)" />
      <xs:enumeration value="Croatian - Bosnia and Herzegovina (hr-BA)" />
      <xs:enumeration value="Croatian - Croatia (hr-HR)" />
      <xs:enumeration value="Czech - Czech Republic (cs-CZ)" />
      <xs:enumeration value="Danish - Denmark (da-DK)" />
      <xs:enumeration value="Divehi - Maldives (dv-MV)" />
      <xs:enumeration value="Dutch - Belgium (nl-BE)" />
      <xs:enumeration value="Dutch - Netherlands (nl-NL)" />
      <xs:enumeration value="English - Australia (en-AU)" />
      <xs:enumeration value="English - Belize (en-BZ)" />
      <xs:enumeration value="English - Canada (en-CA)" />
      <xs:enumeration value="English - Caribbean (en-029)" />
      <xs:enumeration value="English - Ireland (en-IE)" />
      <xs:enumeration value="English - Jamaica (en-JM)" />
      <xs:enumeration value="English - New Zealand (en-NZ)" />
      <xs:enumeration value="English - Republic of the Philippines (en-PH)" />
      <xs:enumeration value="English - South Africa (en-ZA)" />
      <xs:enumeration value="English - Trinidad and Tobago (en-TT)" />
      <xs:enumeration value="English - United Kingdom (en-GB)" />
      <xs:enumeration value="English - United States (en-US)" />
      <xs:enumeration value="English - Zimbabwe (en-ZW)" />
      <xs:enumeration value="Estonian - Estonia (et-EE)" />
      <xs:enumeration value="Faroese - Faroe Islands (fo-FO)" />
      <xs:enumeration value="Finnish - Finland (fi-FI)" />
      <xs:enumeration value="French - Belgium (fr-BE)" />
      <xs:enumeration value="French - Canada (fr-CA)" />
      <xs:enumeration value="French - France (fr-FR)" />
      <xs:enumeration value="French - Luxembourg (fr-LU)" />
      <xs:enumeration value="French - Principality of Monaco (fr-MC)" />
      <xs:enumeration value="French - Switzerland (fr-CH)" />
      <xs:enumeration value="Galician - Galician (gl-ES)" />
      <xs:enumeration value="Georgian - Georgia (ka-GE)" />
      <xs:enumeration value="German - Austria (de-AT)" />
      <xs:enumeration value="German - Germany (de-DE)" />
      <xs:enumeration value="German - Liechtenstein (de-LI)" />
      <xs:enumeration value="German - Luxembourg (de-LU)" />
      <xs:enumeration value="German - Switzerland (de-CH)" />
      <xs:enumeration value="Greek - Greece (el-GR)" />
      <xs:enumeration value="Gujarati - India (gu-IN)" />
      <xs:enumeration value="Hebrew - Israel (he-IL)" />
      <xs:enumeration value="Hindi - India (hi-IN)" />
      <xs:enumeration value="Hungarian - Hungary (hu-HU)" />
      <xs:enumeration value="Icelandic - Iceland (is-IS)" />
      <xs:enumeration value="Indonesian - Indonesia (id-ID)" />
      <xs:enumeration value="Invariant Language - Invariant Country ()" />
      <xs:enumeration value="Italian - Italy (it-IT)" />
      <xs:enumeration value="Italian - Switzerland (it-CH)" />
      <xs:enumeration value="Japanese - Japan (ja-JP)" />
      <xs:enumeration value="Kannada - India (kn-IN)" />
      <xs:enumeration value="Kazakh - Kazakhstan (kk-KZ)" />
      <xs:enumeration value="Kiswahili - Kenya (sw-KE)" />
      <xs:enumeration value="Konkani - India (kok-IN)" />
      <xs:enumeration value="Korean - Korea (ko-KR)" />
      <xs:enumeration value="Kyrgyz - Kyrgyzstan (ky-KG)" />
      <xs:enumeration value="Latvian - Latvia (lv-LV)" />
      <xs:enumeration value="Lithuanian - Lithuania (lt-LT)" />
      <xs:enumeration value="Macedonian - Former Yugoslav Republic of Macedonia (mk-MK)" />
      <xs:enumeration value="Malay - Brunei Darussalam (ms-BN)" />
      <xs:enumeration value="Malay - Malaysia (ms-MY)" />
      <xs:enumeration value="Maltese (mt-MT)" />
      <xs:enumeration value="Maori (mi-NZ)" />
      <xs:enumeration value="Marathi - India (mr-IN)" />
      <xs:enumeration value="Mongolian - Cyrillic, Mongolia (mn-MN)" />
      <xs:enumeration value="Northern Sotho (ns-ZA)" />
      <xs:enumeration value="Norwegian, Bokmal - Norway (nb-NO)" />
      <xs:enumeration value="Norwegian, Nynorsk - Norway (nn-NO)" />
      <xs:enumeration value="Persian - Iran (fa-IR)" />
      <xs:enumeration value="Polish - Poland (pl-PL)" />
      <xs:enumeration value="Portuguese - Brazil (pt-BR)" />
      <xs:enumeration value="Portuguese - Portugal (pt-PT)" />
      <xs:enumeration value="Punjabi - India (pa-IN)" />
      <xs:enumeration value="Quechua - Bolivia (quz-BO)" />
      <xs:enumeration value="Quechua - Ecuador (quz-EC)" />
      <xs:enumeration value="Quechua - Peru (quz-PE)" />
      <xs:enumeration value="Romanian - Romania (ro-RO)" />
      <xs:enumeration value="Russian - Russia (ru-RU)" />
      <xs:enumeration value="Sami, Inari - Finland (smn-FI)" />
      <xs:enumeration value="Sami, Lule - Norway (smj-NO)" />
      <xs:enumeration value="Sami, Lule - Sweden (smj-SE)" />
      <xs:enumeration value="Sami, Northern - Finland (se-FI)" />
      <xs:enumeration value="Sami, Northern - Norway (se-NO)" />
      <xs:enumeration value="Sami, Northern - Sweden (se-SE)" />
      <xs:enumeration value="Sami, Skolt - Finland (sms-FI)" />
      <xs:enumeration value="Sami, Southern - Norway (sma-NO)" />
      <xs:enumeration value="Sami, Southern - Sweden (sma-SE)" />
      <xs:enumeration value="Sanskrit - India (sa-IN)" />
      <xs:enumeration value="Serbian - Cyrillic, Bosnia and Herzegovina (sr-Cyrl-BA)" />
      <xs:enumeration value="Serbian - Cyrillic, Serbia (sr-Cyrl-CS)" />
      <xs:enumeration value="Serbian - Latin, Bosnia and Herzegovina (sr-Latn-BA)" />
      <xs:enumeration value="Serbian - Latin, Serbia (sr-Latn-CS)" />
      <xs:enumeration value="Slovak - Slovakia (sk-SK)" />
      <xs:enumeration value="Slovenian - Slovenia (sl-SI)" />
      <xs:enumeration value="Spanish - Argentina (es-AR)" />
      <xs:enumeration value="Spanish - Bolivia (es-BO)" />
      <xs:enumeration value="Spanish - Chile (es-CL)" />
      <xs:enumeration value="Spanish - Colombia (es-CO)" />
      <xs:enumeration value="Spanish - Costa Rica (es-CR)" />
      <xs:enumeration value="Spanish - Dominican Republic (es-DO)" />
      <xs:enumeration value="Spanish - Ecuador (es-EC)" />
      <xs:enumeration value="Spanish - El Salvador (es-SV)" />
      <xs:enumeration value="Spanish - Guatemala (es-GT)" />
      <xs:enumeration value="Spanish - Honduras (es-HN)" />
      <xs:enumeration value="Spanish - Mexico (es-MX)" />
      <xs:enumeration value="Spanish - Nicaragua (es-NI)" />
      <xs:enumeration value="Spanish - Panama (es-PA)" />
      <xs:enumeration value="Spanish - Paraguay (es-PY)" />
      <xs:enumeration value="Spanish - Peru (es-PE)" />
      <xs:enumeration value="Spanish - Puerto Rico (es-PR)" />
      <xs:enumeration value="Spanish - Spain (es-ES)" />
      <xs:enumeration value="Spanish - Uruguay (es-UY)" />
      <xs:enumeration value="Spanish - Venezuela (es-VE)" />
      <xs:enumeration value="Swedish - Finland (sv-FI)" />
      <xs:enumeration value="Swedish - Sweden (sv-SE)" />
      <xs:enumeration value="Syriac - Syria (syr-SY)" />
      <xs:enumeration value="Tamil - India (ta-IN)" />
      <xs:enumeration value="Tatar - Russia (tt-RU)" />
      <xs:enumeration value="Telugu - India (te-IN)" />
      <xs:enumeration value="Thai - Thailand (th-TH)" />
      <xs:enumeration value="Tswana (tn-ZA)" />
      <xs:enumeration value="Turkish - Turkey (tr-TR)" />
      <xs:enumeration value="Ukrainian - Ukraine (uk-UA)" />
      <xs:enumeration value="Urdu - Islamic Republic of Pakistan (ur-PK)" />
      <xs:enumeration value="Uzbek - Cyrillic, Uzbekistan (uz-Cyrl-UZ)" />
      <xs:enumeration value="Uzbek - Latin, Uzbekistan (uz-Latn-UZ)" />
      <xs:enumeration value="Vietnamese - Vietnam (vi-VN)" />
      <xs:enumeration value="Welsh (cy-GB)" />
      <xs:enumeration value="Xhosa (xh-ZA)" />
      <xs:enumeration value="Zulu (zu-ZA)" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DpiType">
    <xs:restriction base="xs:nonNegativeInteger" />
  </xs:simpleType>

  <xs:simpleType name="ErrorActionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="LogDebug" />
      <xs:enumeration value="LogError" />
      <xs:enumeration value="RaiseError" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="FailureActionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Ignore" />
      <xs:enumeration value="Warn" />
      <xs:enumeration value="Error" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="FeatureLayerModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Snapshot" />
      <xs:enumeration value="OnDemand" />
      <xs:enumeration value="SelectionOnly" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="HexColorType">
    <xs:restriction base="xs:string">
      <xs:pattern value="#?[0-9a-fA-F]{6,8}" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="IDType">
    <xs:restriction base="xs:string">
      <xs:pattern value="[A-Za-z0-9_]*" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="MapServiceFunction">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Represents the logical function of a map service.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Operational">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Represents an operational map service.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Base">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Represents a base map service.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="MapServiceProviderType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Geocortex.Gis.Services.Bing" />
      <xs:enumeration value="Geocortex.Gis.Services.ArcGisServer.Rest" />
      <xs:enumeration value="Geocortex.Gis.Services.Wms" />
      <xs:enumeration value="Geocortex.Gis.Services.Wmts" />
      <xs:enumeration value="Geocortex.Gis.Services.Web" />
      <xs:enumeration value="Geocortex.Gis.Services.ConTerra.ArcGisServer.Rest" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NamedColorType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="AliceBlue" />
      <xs:enumeration value="AntiqueWhite" />
      <xs:enumeration value="Aqua" />
      <xs:enumeration value="Aquamarine" />
      <xs:enumeration value="Azure" />
      <xs:enumeration value="Beige" />
      <xs:enumeration value="Bisque" />
      <xs:enumeration value="Black" />
      <xs:enumeration value="BlanchedAlmond" />
      <xs:enumeration value="Blue" />
      <xs:enumeration value="BlueViolet" />
      <xs:enumeration value="Brown" />
      <xs:enumeration value="BurlyWood" />
      <xs:enumeration value="CadetBlue" />
      <xs:enumeration value="Chartreuse" />
      <xs:enumeration value="Chocolate" />
      <xs:enumeration value="Coral" />
      <xs:enumeration value="CornflowerBlue" />
      <xs:enumeration value="Cornsilk" />
      <xs:enumeration value="Crimson" />
      <xs:enumeration value="Cyan" />
      <xs:enumeration value="DarkBlue" />
      <xs:enumeration value="DarkCyan" />
      <xs:enumeration value="DarkGoldenrod" />
      <xs:enumeration value="DarkGray" />
      <xs:enumeration value="DarkGreen" />
      <xs:enumeration value="DarkKhaki" />
      <xs:enumeration value="DarkMagenta" />
      <xs:enumeration value="DarkOliveGreen" />
      <xs:enumeration value="DarkOrange" />
      <xs:enumeration value="DarkOrchid" />
      <xs:enumeration value="DarkRed" />
      <xs:enumeration value="DarkSalmon" />
      <xs:enumeration value="DarkSeaGreen" />
      <xs:enumeration value="DarkSlateBlue" />
      <xs:enumeration value="DarkSlateGray" />
      <xs:enumeration value="DarkTurquoise" />
      <xs:enumeration value="DarkViolet" />
      <xs:enumeration value="DeepPink" />
      <xs:enumeration value="DeepSkyBlue" />
      <xs:enumeration value="DimGray" />
      <xs:enumeration value="DodgerBlue" />
      <xs:enumeration value="Firebrick" />
      <xs:enumeration value="FloralWhite" />
      <xs:enumeration value="ForestGreen" />
      <xs:enumeration value="Fuchsia" />
      <xs:enumeration value="Gainsboro" />
      <xs:enumeration value="GhostWhite" />
      <xs:enumeration value="Gold" />
      <xs:enumeration value="Goldenrod" />
      <xs:enumeration value="Gray" />
      <xs:enumeration value="Green" />
      <xs:enumeration value="GreenYellow" />
      <xs:enumeration value="Honeydew" />
      <xs:enumeration value="HotPink" />
      <xs:enumeration value="IndianRed" />
      <xs:enumeration value="Indigo" />
      <xs:enumeration value="Ivory" />
      <xs:enumeration value="Khaki" />
      <xs:enumeration value="Lavender" />
      <xs:enumeration value="LavenderBlush" />
      <xs:enumeration value="LawnGreen" />
      <xs:enumeration value="LemonChiffon" />
      <xs:enumeration value="LightBlue" />
      <xs:enumeration value="LightCoral" />
      <xs:enumeration value="LightCyan" />
      <xs:enumeration value="LightGoldenrodYellow" />
      <xs:enumeration value="LightGray" />
      <xs:enumeration value="LightGreen" />
      <xs:enumeration value="LightPink" />
      <xs:enumeration value="LightSalmon" />
      <xs:enumeration value="LightSeaGreen" />
      <xs:enumeration value="LightSkyBlue" />
      <xs:enumeration value="LightSlateGray" />
      <xs:enumeration value="LightSteelBlue" />
      <xs:enumeration value="LightYellow" />
      <xs:enumeration value="Lime" />
      <xs:enumeration value="LimeGreen" />
      <xs:enumeration value="Linen" />
      <xs:enumeration value="Magenta" />
      <xs:enumeration value="Maroon" />
      <xs:enumeration value="MediumAquamarine" />
      <xs:enumeration value="MediumBlue" />
      <xs:enumeration value="MediumOrchid" />
      <xs:enumeration value="MediumPurple" />
      <xs:enumeration value="MediumSeaGreen" />
      <xs:enumeration value="MediumSlateBlue" />
      <xs:enumeration value="MediumSpringGreen" />
      <xs:enumeration value="MediumTurquoise" />
      <xs:enumeration value="MediumVioletRed" />
      <xs:enumeration value="MidnightBlue" />
      <xs:enumeration value="MintCream" />
      <xs:enumeration value="MistyRose" />
      <xs:enumeration value="Moccasin" />
      <xs:enumeration value="NavajoWhite" />
      <xs:enumeration value="Navy" />
      <xs:enumeration value="OldLace" />
      <xs:enumeration value="Olive" />
      <xs:enumeration value="OliveDrab" />
      <xs:enumeration value="Orange" />
      <xs:enumeration value="OrangeRed" />
      <xs:enumeration value="Orchid" />
      <xs:enumeration value="PaleGoldenrod" />
      <xs:enumeration value="PaleGreen" />
      <xs:enumeration value="PaleTurquoise" />
      <xs:enumeration value="PaleVioletRed" />
      <xs:enumeration value="PapayaWhip" />
      <xs:enumeration value="PeachPuff" />
      <xs:enumeration value="Peru" />
      <xs:enumeration value="Pink" />
      <xs:enumeration value="Plum" />
      <xs:enumeration value="PowderBlue" />
      <xs:enumeration value="Purple" />
      <xs:enumeration value="Red" />
      <xs:enumeration value="RosyBrown" />
      <xs:enumeration value="RoyalBlue" />
      <xs:enumeration value="SaddleBrown" />
      <xs:enumeration value="Salmon" />
      <xs:enumeration value="SandyBrown" />
      <xs:enumeration value="SeaGreen" />
      <xs:enumeration value="SeaShell" />
      <xs:enumeration value="Sienna" />
      <xs:enumeration value="Silver" />
      <xs:enumeration value="SkyBlue" />
      <xs:enumeration value="SlateBlue" />
      <xs:enumeration value="SlateGray" />
      <xs:enumeration value="Snow" />
      <xs:enumeration value="SpringGreen" />
      <xs:enumeration value="SteelBlue" />
      <xs:enumeration value="Tan" />
      <xs:enumeration value="Teal" />
      <xs:enumeration value="Thistle" />
      <xs:enumeration value="Tomato" />
      <xs:enumeration value="Transparent" />
      <xs:enumeration value="Turquoise" />
      <xs:enumeration value="Violet" />
      <xs:enumeration value="Wheat" />
      <xs:enumeration value="White" />
      <xs:enumeration value="WhiteSmoke" />
      <xs:enumeration value="Yellow" />
      <xs:enumeration value="YellowGreen" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NorthArrowCharacterType">
    <xs:restriction base="xs:int">
      <xs:minInclusive value="33" />
      <xs:maxInclusive value="231" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="OpacityType">
    <xs:restriction base="xs:double">
      <xs:minInclusive value="0.0" />
      <xs:maxInclusive value="1.0" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="OutputFormatType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Pdf" />
      <xs:enumeration value="Rtf" />
      <xs:enumeration value="Html" />
      <xs:enumeration value="Xls" />
      <xs:enumeration value="Tiff" />
      <xs:enumeration value="Text" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="PercentageType">
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0" />
      <xs:maxInclusive value="100" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="RectangleType">
    <xs:restriction base="xs:string">
      <xs:pattern value="^\s*-?\d+(\.\d+)?\s*,\s*-?\d+(\.\d+)?\s*,\s*-?\d+(\.\d+)?\s*,\s*-?\d+(\.\d+)?\s*$" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SqlDialectType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Ansi" />
      <xs:enumeration value="EsriFileGeodatabase" />
      <xs:enumeration value="IbmDb2" />
      <xs:enumeration value="Informix" />
      <xs:enumeration value="MicrosoftAccessSql" />
      <xs:enumeration value="MsSqlServer" />
      <xs:enumeration value="MySql" />
      <xs:enumeration value="NotSpecified" />
      <xs:enumeration value="Oracle" />
      <xs:enumeration value="PostgreSql" />
      <xs:enumeration value="Sql92" />
      <xs:enumeration value="Sql99" />
      <xs:enumeration value="Sybase" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="UnitType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Centimeters" />
      <xs:enumeration value="Decimeters" />
      <xs:enumeration value="Degrees" />
      <xs:enumeration value="Feet" />
      <xs:enumeration value="Grads" />
      <xs:enumeration value="Inches" />
      <xs:enumeration value="Kilometers" />
      <xs:enumeration value="Meters" />
      <xs:enumeration value="Miles" />
      <xs:enumeration value="Millimeters" />
      <xs:enumeration value="NauticalMiles" />
      <xs:enumeration value="Other" />
      <xs:enumeration value="Radians" />
      <xs:enumeration value="USSurveyFeet" />
      <xs:enumeration value="Yards" />
    </xs:restriction>
  </xs:simpleType>


  <!-- COMPLEX TYPES -->

  <xs:complexType name="RasterOptionsType">
    <xs:all>
      <xs:element name="BandIDs" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="Value" type="xs:nonNegativeInteger" use="required" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- End Band IDs -->

      <xs:element name="MosaicRule" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:all>
            <xs:element name="Viewpoint" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:attribute name="X" type="xs:double" />
                <xs:attribute name="Y" type="xs:double" />
              </xs:complexType>
            </xs:element>
            <xs:element name="LockRasterIDs" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="Value" type="xs:int" use="required" />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="ObjectIDs" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="Value" type="xs:int" use="required" />
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:all>
          <xs:attribute name="Ascending" type="BoolType" />
          <xs:attribute name="MosaicMethod" type="xs:string" />
          <xs:attribute name="MosaicOperation" type="xs:string" />
          <xs:attribute name="SortFieldName" type="xs:string" />
          <xs:attribute name="WhereClause" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <!-- End Mosaic Rule -->

      <xs:element name="RenderingRule" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:attribute name="FunctionName" type="xs:string" />
          <xs:attribute name="VariableName" type="xs:string" />
        </xs:complexType>
      </xs:element>
      <!-- End Rendering Rule -->

    </xs:all>

    <xs:attribute name="CompressionQuality" type="PercentageType" />
    <xs:attribute name="Interpolation" type="xs:string" />
    <xs:attribute name="NoDataValue" type="xs:double" />
    <xs:attribute name="PixelType" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="PrintJobSettingsType">
    <xs:all>
      <xs:element name="EmailSettings" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:all>
            <xs:element name="SmtpSettings" minOccurs="0" maxOccurs="1">
              <xs:annotation>
                <xs:documentation>
                  Print jobs use email to notify users of the status of the job. This element
                  provides information about the SMTP server used to send the email.
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="Host" type="xs:string" use="required">
                  <xs:annotation>
                    <xs:documentation>
                      Sets the host of the SMTP server.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Port" type="xs:nonNegativeInteger" default="25">
                  <xs:annotation>
                    <xs:documentation>
                      Sets the port of the SMTP server.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Username" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      Sets the username to access the SMTP server.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Password" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      Sets the password to access the SMTP server.
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:all>
          <xs:attribute name="FailureMessage" type="xs:string" />
          <xs:attribute name="FailureSubject" type="xs:string" />
          <xs:attribute name="FromAddress" type="xs:string" use="required" />
          <xs:attribute name="FromName" type="xs:string" />
          <xs:attribute name="SendStartMessage" type="BoolType" default="true" />
          <xs:attribute name="StartMessage" type="xs:string" />
          <xs:attribute name="StartSubject" type="xs:string" />
          <xs:attribute name="SuccessMessage" type="xs:string" />
          <xs:attribute name="SuccessSubject" type="xs:string" />
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="PreserveIntermediateFiles" type="BoolType" default="false">
      <xs:annotation>
        <xs:documentation>
          If PreserveIntermediateFiles is set to true, intermediate files will not be cleaned up when a print job fails.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Enabled" type="BoolType" default="false">
      <xs:annotation>
        <xs:documentation>
          If enabled is set to true, external report generation is available.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="MaxWorkers" type="xs:positiveInteger" default="2">
      <xs:annotation>
        <xs:documentation>
          Dictates the number of image tiles that can be generated at one time. Each worker is responsible for both downloading and processing
          a tile, so virtual memory and network bandwidth considerations apply.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="OutputFileTimeout" type="xs:double" default="168">
      <xs:annotation>
        <xs:documentation>
          The length of time, in hours, before the result of the print job is removed from the cache.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="TileSize" type="xs:positiveInteger" default="1024">
      <xs:annotation>
        <xs:documentation>
          This element configures the tile size to be used when assembling map images from tiles.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!-- End PrintJobSettingsType -->

  <xs:complexType name="Permission">
    <xs:all>
      <xs:element name="Authenticate" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Applies this behavior to the authenticate capability thereby controlling what entities may or may not authenticate.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="Issuer" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Specifies the issuer of the claim.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="OriginalIssuer" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Specifies the original issuer of the claim.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Type" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Specifies the claim type of the claim.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Value" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Specifies the value of the claim.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ValueType" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Specifies the value type of the claim.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Role" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Obsolete - Specifies the membership role to apply the behavior to.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="User" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Obsolete - Specifies the membership user to apply the behavior to.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="WellKnownRole" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Obsolete - Specifies the well known role to apply the behavior to.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="Permissions">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Allow" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Allows the specified role, user, or well known role to perform specific capabilities.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="Permission" />
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="Deny" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            Denies the specified role, user, or well known role from performing specific capabilities.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="Permission" />
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="Inherit" type="BoolType">
      <xs:annotation>
        <xs:documentation>
          Controls whether the permissions will or will not inherit from the parent element.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Precedence">
      <xs:annotation>
        <xs:documentation>
          Controls the precedence of permission rules.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Inherit" />
          <xs:enumeration value="DenyBeforeAllow" />
          <xs:enumeration value="AllowBeforeDeny" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="SecurityContexts">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="ArcGISPortal" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Specifies credentials for accessing ArcGIS Online, or someday soon - an arbitrary ArcGIS Portal other than ArcGIS Online.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="ArcGISPortal" />
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="ArcGISPortal">
    <xs:all>
      <xs:element name="AppLogOn" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            A grouping of attributes related to the app log on for ArcGIS Portal.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="ArcGisPortalAppLogOn" />
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="UserLogOn" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            A grouping of attributes related to the user log on for ArcGIS Portal.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="ArcGisPortalUserLogOn" />
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="ProviderName">
      <xs:annotation>
        <xs:documentation xml:lang="en">
          A well known ID that allows Essentials to know certain characteristics of the ArcGIS Portal without
          having to configure them. The only allowable value at this time is ArcGIS Online.
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="ArcGIS Online" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ArcGisPortalAppLogOn">
    <xs:attribute name="ClientID" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="en">
          The ID of the ArcGIS Portal app. Also known as APP ID. Required for secured connections to ArcGIS Portal.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ClientSecret" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="en">
          The secret for the application. This is effectively like an application password.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SecretEncrypted" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="en">
          Defines whether or not the supplied ClientSecret is encrypted or not. If set to true,
          the ClientSecret must be encrypted. If set to false, the ClientSecret must not be encrypted.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ArcGisPortalUserLogOn">
    <xs:attribute name="UserName" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="en">
          The user name to use for connecting to secured ArcGIS Online map services.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Password" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="en">
          The password for the user. This can either be encrypted or not encrypted, depending
          on the PasswordEncrypted setting.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="PasswordEncrypted" type="xs:string">
      <xs:annotation>
        <xs:documentation xml:lang="en">
          Defines whether or not the supplied Password is encrypted or not. If set to true,
          the Password must be encrypted. If set to false, the Password must not be encrypted.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="Extensions">
    <xs:sequence>
      <xs:element name="Extension" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            An extension defines the business object which the enclosed XML will be deserialized into.
            Administrators and developers may define any arbitrary XML, whereby the elements must
            correspond to .NET classes and the attributes must correspond to settable properties of those
            classes.  Once a site is deserialized, business objects associated with custom XML extensions
            are stored in a collection belonging to the containing parent object (for example, layer
            extensions are stored in the Extensions property of the Geocortex.Essentials.Layer object).
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:any minOccurs="1" maxOccurs="1" namespace="##local" processContents="lax" />
          </xs:sequence>
          <xs:attribute name="Assembly" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                The name of an assembly which contains the extension class represented by the child
                element.  This is usually, but not always, the file name (without the .dll extension) of the
                assembly as deployed in the Sites directory.  You may specify the name of the assembly, or
                the fully qualified name of the assembly (including version information, etc.) in order to
                explicitly reference an assembly when more than one assembly with the same name may exist in
                the Sites directory.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ClassName" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation xml:lang="en">
                The name of the type which represents the extension represented by the child element.  This
                must be a fully qualified type name (including the namespace), and it must belong to the
                assembly referenced by the Assembly attribute of this element.  The type must implement
                the Geocortex.Essentials.IExtension interface, and the Geocortex.Core.IDeepCloneable interface, and
                it must be Serializable.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="MergeMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Append">
        <xs:annotation>
          <xs:documentation>
            Specifies that the contents shall be appended to the existing content of the current element being processed.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Assign">
        <xs:annotation>
          <xs:documentation>
            Specifies that the contents shall replace the existing content of the current element being processed.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Layout">
        <xs:annotation>
          <xs:documentation>
            Specifies that the contents take on the order as specified by the representative elements in the content.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Remove">
        <xs:annotation>
          <xs:documentation>
            Specifies that the contents shall be removed given by the representative contents.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Update">
        <xs:annotation>
          <xs:documentation>
            Specifies that the contents shall be updated given by the partial contents.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="IdentifiableResourceType">
    <xs:complexContent>
      <xs:extension base="UniqueType">
        <xs:sequence />
        <xs:attribute name="DisplayName" type="xs:string" use="required" />
        <xs:attribute name="MergeMode" type="MergeMode" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="LocalProxy">
    <xs:complexType>
      <xs:sequence />
      <xs:attribute name="AppRelativePath" type="xs:string" use="required" />
      <xs:attribute name="AppRelativeTemplate" type="xs:string" use="required" />
      <xs:attribute name="ResolveCodedDomains" type="xs:boolean" use="optional" />
      <xs:attribute name="UseAppPoolIdentity" type="xs:boolean" use="optional" />
    </xs:complexType>
  </xs:element>

  <xs:complexType name="Properties">
    <xs:sequence>
      <xs:element name="Property" minOccurs="1" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            A property is a simple string name-value pair.  Administrators have the ability to configure properties
            having arbitrary name and value information.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Note" minOccurs="0" maxOccurs="1">
              <xs:simpleType>
                <xs:restriction base="xs:string"/>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="Name" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>
                The name of the property. Within the collection of properties, the name must be unique.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="Value" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>
                The value of the property.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!-- End of Properties -->

  <xs:complexType name="UniqueType">
    <xs:sequence />
    <xs:attribute name="ID" type="IDType" use="required"/>
  </xs:complexType>

  <xs:complexType name="LayerListItem">
    <xs:sequence>
      <xs:element name="Items" type="LayerListItems" minOccurs="0" maxOccurs="1" />
      <xs:element ref="ThemeSettings" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
    <xs:attribute name="ID" type="xs:string" use="required"/>
    <xs:attribute name="Name" type="xs:string" use="optional"/>
    <xs:attribute name="Visible" type="xs:boolean" use="optional" />
    <xs:attribute name="IsExpanded" type="xs:boolean" use="optional" />
    <xs:attribute name="IconUri" type="xs:string" use="optional" />
  </xs:complexType>

  <xs:complexType name="LayerListItems">
    <xs:sequence>
      <xs:element name="Item" type="LayerListItem" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  
  <!-- ATTRIBUTES -->
  
  <xs:attribute name="DataProvider">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="Default"/>
        <xs:enumeration value="FileGdb"/>
        <xs:enumeration value="Shapefile"/>
        <xs:enumeration value="Db2"/>
        <xs:enumeration value="Informix"/>
        <xs:enumeration value="MsAccess"/>
        <xs:enumeration value="Oracle"/>
        <xs:enumeration value="PostgreSql"/>
        <xs:enumeration value="SqlServer"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
</xs:schema>
